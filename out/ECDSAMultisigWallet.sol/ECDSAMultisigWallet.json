{
  "abi": [
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__AddSignerFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__InsufficientSigners",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__InvalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__MessageValueMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__QuorumNotReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__RecoveredSignerNotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__RemoveSignerFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__SignerAlreadySigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__SignerLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSA__InvalidS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSA__InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSA__InvalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSA__InvalidV",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "delegate",
              "type": "bool"
            }
          ],
          "internalType": "struct IECDSAMultisigWalletInternal.Parameters",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct IECDSAMultisigWalletInternal.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "verifyAndExecute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])": "04887cf5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__AddSignerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__InsufficientSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__MessageValueMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__QuorumNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__RecoveredSignerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__RemoveSignerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__SignerAlreadySigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__SignerLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSA__InvalidS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSA__InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSA__InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSA__InvalidV\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"delegate\",\"type\":\"bool\"}],\"internalType\":\"struct IECDSAMultisigWalletInternal.Parameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct IECDSAMultisigWalletInternal.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"}],\"name\":\"verifyAndExecute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"inheriting contract should provide functions to read and write nonce invalidation status\",\"kind\":\"dev\",\"methods\":{\"verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])\":{\"details\":\"message parameters must be included in signature\",\"params\":{\"parameters\":\"structured call parameters (target, data, value, delegate)\",\"signatures\":\"array of structured signature data (signature, nonce)\"}}},\"title\":\"ECDSA-verified multisig wallet contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])\":{\"notice\":\"verify signatures and execute \\\"call\\\" or \\\"delegatecall\\\" with given parameters\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/solidstate/local/multisig/ECDSAMultisigWallet.sol\":\"ECDSAMultisigWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/solidstate/local/cryptography/ECDSA.sol\":{\"keccak256\":\"0xebe2da1787e7830c80fae48c6d1a6f5708bf86a25edf30be5c1ff4887fbb6306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ac83051cf9bc3f2ecf631f81349ababf6e8de5e0ad6dc4d8abf06290881ada\",\"dweb:/ipfs/QmWgSMb2RrFNWtEngLhwBoqMu4LqZ2wS8vgWVa4iATYT73\"]},\"contracts/.cache/solidstate/local/data/EnumerableSet.sol\":{\"keccak256\":\"0x326ce85b4b1343d8a50bc7ab25f74e7ba71cf4d5b09b3e9f4393d1ca7a9427ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0523ca1759b659b81d271a504053a1382d4b0ef128ec85923924363df1285053\",\"dweb:/ipfs/QmeFXAehR5XhpmJRq1V48iPsVkWrg4TyQLzxWKDuYGiBVA\"]},\"contracts/.cache/solidstate/local/multisig/ECDSAMultisigWallet.sol\":{\"keccak256\":\"0x690809e5396c510220206d3f41f2558dc27e8a1a3d046e04b2664026bf5db878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9896a679c5f6d1711bde5081d2fa8d15e790f7f96eaaa25d174852c57c223df7\",\"dweb:/ipfs/QmbogCU7Mmw3UPE3UUnPf5WiVcReu7CMPjS26muHfS4Coh\"]},\"contracts/.cache/solidstate/local/multisig/ECDSAMultisigWalletInternal.sol\":{\"keccak256\":\"0x2398bbb55b1ac4e703ebea92453f931b28af2d4344a6f58d3ca08b0c84e6e328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e3bef97b4d08df4b6e80f5e039bc5f319829acae9704bd78e129483f648253e\",\"dweb:/ipfs/QmakeQYpAAC3Y28N4XBNe1F7NkFYTad5stLifQfoqSqpPD\"]},\"contracts/.cache/solidstate/local/multisig/ECDSAMultisigWalletStorage.sol\":{\"keccak256\":\"0xec475a8d51eb86a9eba9bcedd756fea7d973534f6d8dda40f93bb84590931eb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e2f9c8360563296be2a96b83bb541ff3268027baa73b79ca5de08a0281376d8\",\"dweb:/ipfs/QmPF69hJeJfgwFzgb51KP7hRkx6xWwQU2W8gAN4gCciDAe\"]},\"contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol\":{\"keccak256\":\"0x2c92530539e37754a2db8eee9f1b52adf54143a7513ac951dc85ffd33eeb2a16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb7713cb08093b496c57081d9136fa2e31b4599dd25b69827f3948bd883911a\",\"dweb:/ipfs/QmdG6riiFyiSE87KU67ahEbXFtHhHrqUExJ9mW2a3vLMfN\"]},\"contracts/.cache/solidstate/local/multisig/IECDSAMultisigWalletInternal.sol\":{\"keccak256\":\"0xc28e9b028bfa949f8759f457dd81aa6ad781312aad2c179cfc35d1c83e62ccb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e12bf9e39b368946f95e21ed2295fb8b0163f024a397489be74f0cb8fdf1ee0\",\"dweb:/ipfs/QmVv9ZVRnnKZRGg4C4stsBF5N4sxZ9eQ4MC5X1ZwzMLeJ8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__AddSignerFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__InsufficientSigners"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__InvalidNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__MessageValueMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__QuorumNotReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__RecoveredSignerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__RemoveSignerFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__SignerAlreadySigned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__SignerLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidSignatureLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidV"
        },
        {
          "inputs": [
            {
              "internalType": "struct IECDSAMultisigWalletInternal.Parameters",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "delegate",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct IECDSAMultisigWalletInternal.Signature[]",
              "name": "signatures",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "verifyAndExecute",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])": {
            "details": "message parameters must be included in signature",
            "params": {
              "parameters": "structured call parameters (target, data, value, delegate)",
              "signatures": "array of structured signature data (signature, nonce)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])": {
            "notice": "verify signatures and execute \"call\" or \"delegatecall\" with given parameters"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/solidstate/local/multisig/ECDSAMultisigWallet.sol": "ECDSAMultisigWallet"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/solidstate/local/cryptography/ECDSA.sol": {
        "keccak256": "0xebe2da1787e7830c80fae48c6d1a6f5708bf86a25edf30be5c1ff4887fbb6306",
        "urls": [
          "bzz-raw://19ac83051cf9bc3f2ecf631f81349ababf6e8de5e0ad6dc4d8abf06290881ada",
          "dweb:/ipfs/QmWgSMb2RrFNWtEngLhwBoqMu4LqZ2wS8vgWVa4iATYT73"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/data/EnumerableSet.sol": {
        "keccak256": "0x326ce85b4b1343d8a50bc7ab25f74e7ba71cf4d5b09b3e9f4393d1ca7a9427ef",
        "urls": [
          "bzz-raw://0523ca1759b659b81d271a504053a1382d4b0ef128ec85923924363df1285053",
          "dweb:/ipfs/QmeFXAehR5XhpmJRq1V48iPsVkWrg4TyQLzxWKDuYGiBVA"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/multisig/ECDSAMultisigWallet.sol": {
        "keccak256": "0x690809e5396c510220206d3f41f2558dc27e8a1a3d046e04b2664026bf5db878",
        "urls": [
          "bzz-raw://9896a679c5f6d1711bde5081d2fa8d15e790f7f96eaaa25d174852c57c223df7",
          "dweb:/ipfs/QmbogCU7Mmw3UPE3UUnPf5WiVcReu7CMPjS26muHfS4Coh"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/multisig/ECDSAMultisigWalletInternal.sol": {
        "keccak256": "0x2398bbb55b1ac4e703ebea92453f931b28af2d4344a6f58d3ca08b0c84e6e328",
        "urls": [
          "bzz-raw://0e3bef97b4d08df4b6e80f5e039bc5f319829acae9704bd78e129483f648253e",
          "dweb:/ipfs/QmakeQYpAAC3Y28N4XBNe1F7NkFYTad5stLifQfoqSqpPD"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/multisig/ECDSAMultisigWalletStorage.sol": {
        "keccak256": "0xec475a8d51eb86a9eba9bcedd756fea7d973534f6d8dda40f93bb84590931eb0",
        "urls": [
          "bzz-raw://6e2f9c8360563296be2a96b83bb541ff3268027baa73b79ca5de08a0281376d8",
          "dweb:/ipfs/QmPF69hJeJfgwFzgb51KP7hRkx6xWwQU2W8gAN4gCciDAe"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol": {
        "keccak256": "0x2c92530539e37754a2db8eee9f1b52adf54143a7513ac951dc85ffd33eeb2a16",
        "urls": [
          "bzz-raw://abb7713cb08093b496c57081d9136fa2e31b4599dd25b69827f3948bd883911a",
          "dweb:/ipfs/QmdG6riiFyiSE87KU67ahEbXFtHhHrqUExJ9mW2a3vLMfN"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWalletInternal.sol": {
        "keccak256": "0xc28e9b028bfa949f8759f457dd81aa6ad781312aad2c179cfc35d1c83e62ccb7",
        "urls": [
          "bzz-raw://1e12bf9e39b368946f95e21ed2295fb8b0163f024a397489be74f0cb8fdf1ee0",
          "dweb:/ipfs/QmVv9ZVRnnKZRGg4C4stsBF5N4sxZ9eQ4MC5X1ZwzMLeJ8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/solidstate/local/multisig/ECDSAMultisigWallet.sol",
    "id": 45623,
    "exportedSymbols": {
      "ECDSAMultisigWallet": [
        45622
      ],
      "ECDSAMultisigWalletInternal": [
        46029
      ],
      "IECDSAMultisigWallet": [
        46121
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:744:290",
    "nodes": [
      {
        "id": 45589,
        "nodeType": "PragmaDirective",
        "src": "33:23:290",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 45591,
        "nodeType": "ImportDirective",
        "src": "58:64:290",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol",
        "file": "./IECDSAMultisigWallet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45623,
        "sourceUnit": 46122,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45590,
              "name": "IECDSAMultisigWallet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46121,
              "src": "66:20:290",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45593,
        "nodeType": "ImportDirective",
        "src": "123:78:290",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/multisig/ECDSAMultisigWalletInternal.sol",
        "file": "./ECDSAMultisigWalletInternal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45623,
        "sourceUnit": 46030,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45592,
              "name": "ECDSAMultisigWalletInternal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46029,
              "src": "131:27:290",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45622,
        "nodeType": "ContractDefinition",
        "src": "358:418:290",
        "nodes": [
          {
            "id": 45602,
            "nodeType": "FunctionDefinition",
            "src": "455:37:290",
            "nodes": [],
            "body": {
              "id": 45601,
              "nodeType": "Block",
              "src": "490:2:290",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:2:290"
            },
            "returnParameters": {
              "id": 45600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:290"
            },
            "scope": 45622,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 45621,
            "nodeType": "FunctionDefinition",
            "src": "554:220:290",
            "nodes": [],
            "body": {
              "id": 45620,
              "nodeType": "Block",
              "src": "709:65:290",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45616,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45606,
                        "src": "744:10:290",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Parameters_$46150_memory_ptr",
                          "typeString": "struct IECDSAMultisigWalletInternal.Parameters memory"
                        }
                      },
                      {
                        "id": 45617,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45610,
                        "src": "756:10:290",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Signature_$46155_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IECDSAMultisigWalletInternal.Signature memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Parameters_$46150_memory_ptr",
                          "typeString": "struct IECDSAMultisigWalletInternal.Parameters memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Signature_$46155_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IECDSAMultisigWalletInternal.Signature memory[] memory"
                        }
                      ],
                      "id": 45615,
                      "name": "_verifyAndExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45839,
                      "src": "726:17:290",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Parameters_$46150_memory_ptr_$_t_array$_t_struct$_Signature_$46155_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct IECDSAMultisigWalletInternal.Parameters memory,struct IECDSAMultisigWalletInternal.Signature memory[] memory) returns (bytes memory)"
                      }
                    },
                    "id": 45618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:41:290",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 45614,
                  "id": 45619,
                  "nodeType": "Return",
                  "src": "719:48:290"
                }
              ]
            },
            "baseFunctions": [
              46120
            ],
            "documentation": {
              "id": 45603,
              "nodeType": "StructuredDocumentation",
              "src": "498:51:290",
              "text": " @inheritdoc IECDSAMultisigWallet"
            },
            "functionSelector": "04887cf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAndExecute",
            "nameLocation": "563:16:290",
            "parameters": {
              "id": 45611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45606,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "598:10:290",
                  "nodeType": "VariableDeclaration",
                  "scope": 45621,
                  "src": "580:28:290",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Parameters_$46150_memory_ptr",
                    "typeString": "struct IECDSAMultisigWalletInternal.Parameters"
                  },
                  "typeName": {
                    "id": 45605,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45604,
                      "name": "Parameters",
                      "nameLocations": [
                        "580:10:290"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46150,
                      "src": "580:10:290"
                    },
                    "referencedDeclaration": 46150,
                    "src": "580:10:290",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$46150_storage_ptr",
                      "typeString": "struct IECDSAMultisigWalletInternal.Parameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45610,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "629:10:290",
                  "nodeType": "VariableDeclaration",
                  "scope": 45621,
                  "src": "610:29:290",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Signature_$46155_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IECDSAMultisigWalletInternal.Signature[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45608,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 45607,
                        "name": "Signature",
                        "nameLocations": [
                          "610:9:290"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46155,
                        "src": "610:9:290"
                      },
                      "referencedDeclaration": 46155,
                      "src": "610:9:290",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Signature_$46155_storage_ptr",
                        "typeString": "struct IECDSAMultisigWalletInternal.Signature"
                      }
                    },
                    "id": 45609,
                    "nodeType": "ArrayTypeName",
                    "src": "610:11:290",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Signature_$46155_storage_$dyn_storage_ptr",
                      "typeString": "struct IECDSAMultisigWalletInternal.Signature[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:61:290"
            },
            "returnParameters": {
              "id": 45614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45621,
                  "src": "691:12:290",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45612,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:5:290",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:14:290"
            },
            "scope": 45622,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 45595,
              "name": "IECDSAMultisigWallet",
              "nameLocations": [
                "399:20:290"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46121,
              "src": "399:20:290"
            },
            "id": 45596,
            "nodeType": "InheritanceSpecifier",
            "src": "399:20:290"
          },
          {
            "baseName": {
              "id": 45597,
              "name": "ECDSAMultisigWalletInternal",
              "nameLocations": [
                "421:27:290"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46029,
              "src": "421:27:290"
            },
            "id": 45598,
            "nodeType": "InheritanceSpecifier",
            "src": "421:27:290"
          }
        ],
        "canonicalName": "ECDSAMultisigWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 45594,
          "nodeType": "StructuredDocumentation",
          "src": "203:154:290",
          "text": " @title ECDSA-verified multisig wallet contract\n @dev inheriting contract should provide functions to read and write nonce invalidation status"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45622,
          46029,
          46121,
          46156
        ],
        "name": "ECDSAMultisigWallet",
        "nameLocation": "376:19:290",
        "scope": 45623,
        "usedErrors": [
          38208,
          38210,
          38212,
          38214,
          46125,
          46127,
          46129,
          46131,
          46133,
          46135,
          46137,
          46139,
          46141
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 290
}