{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "current",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a08060405234610030573060805261094d9081610036823960805181818160ac015281816101d301526104800152f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c9182633659cfe6146104595782634f1ef2861461015957826352d1902d14610098575081639fa6a6e314610077575063d09de08a1461005a57600080fd5b346100745780600319360112610074576001815401815580f35b80fd5b905034610094578160031936011261009457602091549051908152f35b5080fd5b8334610074578060031936011261007457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036100f157602082516000805160206108f88339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b9150806003193601126104515761016e610646565b906024359067ffffffffffffffff82116104555736602383011215610455578184013561019a816106b5565b6101a683519182610693565b81815286602094858301933660248284010111610451578060248893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610201308314156106d1565b61021e6000805160206108f8833981519152928284541614610732565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561025b575050505050506102589150610793565b80f35b869293949596169085516352d1902d60e01b815287818a81865afa8a918161041e575b506102dd57865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036103c957506102f482610793565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906103c1575b610332575b50505050505080f35b806103ab9684519661034388610661565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d156103b7573d61039d610394826106b5565b92519283610693565b81528681943d92013e610823565b50388080808085610329565b5060609250610823565b506001610324565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d831161044a575b6104368183610693565b810103126104465751903861027e565b8a80fd5b503d61042c565b8280fd5b8480fd5b9150346104515760208060031936011261064257610475610646565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166104ad308214156106d1565b6104ca6000805160206108f8833981519152918383541614610732565b8251908482019282841067ffffffffffffffff85111761062f578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610524575050505050506102589150610793565b869293949596169085516352d1902d60e01b815287818a81865afa8a9181610600575b506105a657865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036103c957506105bd82610793565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906105f9576103325750505050505080f35b5080610324565b9091508881813d8311610628575b6106188183610693565b8101031261044657519038610547565b503d61060e565b634e487b7160e01b895260418852602489fd5b8380fd5b600435906001600160a01b038216820361065c57565b600080fd5b6060810190811067ffffffffffffffff82111761067d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761067d57604052565b67ffffffffffffffff811161067d57601f01601f191660200190565b156106d857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561073957565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156107c8576000805160206108f883398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156108855750815115610837575090565b3b156108405790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156108985750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106108de575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506108bb56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220aaa9dbccc4079b081b236f9f13ca47b4819d410ddbd60c585fd6d56b4e2042f564736f6c63430008130033",
    "sourceMap": "410:222:89:-:0;;;;;;;1088:4:120;1080:13;;410:222:89;;;;;;1080:13:120;410:222:89;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60406080815260048036101561001457600080fd5b600091823560e01c9182633659cfe6146104595782634f1ef2861461015957826352d1902d14610098575081639fa6a6e314610077575063d09de08a1461005a57600080fd5b346100745780600319360112610074576001815401815580f35b80fd5b905034610094578160031936011261009457602091549051908152f35b5080fd5b8334610074578060031936011261007457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036100f157602082516000805160206108f88339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b9150806003193601126104515761016e610646565b906024359067ffffffffffffffff82116104555736602383011215610455578184013561019a816106b5565b6101a683519182610693565b81815286602094858301933660248284010111610451578060248893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610201308314156106d1565b61021e6000805160206108f8833981519152928284541614610732565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561025b575050505050506102589150610793565b80f35b869293949596169085516352d1902d60e01b815287818a81865afa8a918161041e575b506102dd57865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036103c957506102f482610793565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906103c1575b610332575b50505050505080f35b806103ab9684519661034388610661565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d156103b7573d61039d610394826106b5565b92519283610693565b81528681943d92013e610823565b50388080808085610329565b5060609250610823565b506001610324565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d831161044a575b6104368183610693565b810103126104465751903861027e565b8a80fd5b503d61042c565b8280fd5b8480fd5b9150346104515760208060031936011261064257610475610646565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166104ad308214156106d1565b6104ca6000805160206108f8833981519152918383541614610732565b8251908482019282841067ffffffffffffffff85111761062f578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610524575050505050506102589150610793565b869293949596169085516352d1902d60e01b815287818a81865afa8a9181610600575b506105a657865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036103c957506105bd82610793565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906105f9576103325750505050505080f35b5080610324565b9091508881813d8311610628575b6106188183610693565b8101031261044657519038610547565b503d61060e565b634e487b7160e01b895260418852602489fd5b8380fd5b600435906001600160a01b038216820361065c57565b600080fd5b6060810190811067ffffffffffffffff82111761067d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761067d57604052565b67ffffffffffffffff811161067d57601f01601f191660200190565b156106d857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561073957565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156107c8576000805160206108f883398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156108855750815115610837575090565b3b156108405790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156108985750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106108de575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506108bb56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220aaa9dbccc4079b081b236f9f13ca47b4819d410ddbd60c585fd6d56b4e2042f564736f6c63430008130033",
    "sourceMap": "410:222:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1:179;410:222:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2089:6:120;-1:-1:-1;;;;;410:222:89;2080:4:120;2072:23;410:222:89;;;;;-1:-1:-1;;;;;;;;;;;410:222:89;;;;;;;;689:66:112;;;;410:222:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1654:6:120;410:222:89;;;1629:80:120;1645:4;1637:23;;;1629:80;:::i;:::-;1719:87;-1:-1:-1;;;;;;;;;;;410:222:89;;;;;1727:30:120;1719:87;:::i;:::-;689:66:112;;;;;;;2993:17;;;;;;;;;;:::i;:::-;410:222:89;;2906:504:112;410:222:89;;;;;;;;;;689:66:112;;;3046:52;;;;;;;;;;;;;;2906:504;-1:-1:-1;3042:291:112;;410:222:89;;-1:-1:-1;;;3262:56:112;;;;;689:66;;;;410:222:89;689:66:112;;410:222:89;689:66:112;410:222:89;;;689:66:112;-1:-1:-1;;;689:66:112;;;;;;3262:56;3042:291;3148:28;;;;;;;;;689:66;;3042:291;1856:17;;;:::i;:::-;1889:27;;;;410:222:89;;;2208:15:112;;;:28;;;3042:291;2204:112;;3042:291;2906:504;;;;;;410:222:89;;2204:112:112;410:222:89;7266:69:175;410:222:89;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;410:222:89;;;;7224:25:175;;;;;;410:222:89;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;7266:69:175;:::i;:::-;;2204:112:112;;;;;;;;410:222:89;-1:-1:-1;410:222:89;;-1:-1:-1;7266:69:175;:::i;2208:28:112:-;;410:222:89;2208:28:112;;689:66;410:222:89;;-1:-1:-1;;;689:66:112;;;;;;;;;410:222:89;689:66:112;;410:222:89;689:66:112;410:222:89;;;689:66:112;-1:-1:-1;;;689:66:112;;;;;;;3046:52;;;;;;;;;;;;;;;;;:::i;:::-;;;689:66;;;;;3046:52;;;;689:66;410:222:89;;;3046:52:112;;;;;410:222:89;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1654:6:120;410:222:89;;1629:80:120;1645:4;1637:23;;;1629:80;:::i;:::-;1719:87;-1:-1:-1;;;;;;;;;;;410:222:89;;;;;1727:30:120;1719:87;:::i;:::-;410:222:89;;;;;;;;;;;;;;;;;;;;;;689:66:112;;;;;;;2993:17;;;;;;;;;;:::i;2906:504::-;410:222:89;;;;;;;;;;689:66:112;;;3046:52;;;;;;;;;;;;;;2906:504;-1:-1:-1;3042:291:112;;410:222:89;;-1:-1:-1;;;3262:56:112;;;;;689:66;;;;;;;410:222:89;689:66:112;410:222:89;;;689:66:112;-1:-1:-1;;;689:66:112;;;;;;3262:56;3042:291;3148:28;;;;;;;;;689:66;;3042:291;1856:17;;;:::i;:::-;1889:27;;;;410:222:89;;;2208:15:112;;;:28;;;2204:112;;2906:504;;;;;;410:222:89;;2208:28:112;;;;;3046:52;;;;;;;;;;;;;;;;;:::i;:::-;;;689:66;;;;;3046:52;;;;;;;;;410:222:89;-1:-1:-1;;;410:222:89;;;;;;;;;;;;;;;;-1:-1:-1;;;;;410:222:89;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;410:222:89;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;410:222:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;410:222:89;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;410:222:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;410:222:89;;;;;;;1406:259:112;1702:19:175;;:23;410:222:89;;-1:-1:-1;;;;;;;;;;;410:222:89;;-1:-1:-1;;;;;;410:222:89;-1:-1:-1;;;;;410:222:89;;;;;;;;;1406:259:112:o;410:222:89:-;;;-1:-1:-1;;;410:222:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;410:222:89;;;;;;;7630:628:175;;;;7834:418;;;410:222:89;;;7865:22:175;7861:286;;8160:17;;:::o;7861:286::-;1702:19;:23;410:222:89;;8160:17:175;:::o;410:222:89:-;;;-1:-1:-1;;;410:222:89;;;;;;;;;;;;;;;;;;;;7834:418:175;410:222:89;;;;-1:-1:-1;8937:21:175;:17;;9109:142;;;;;;;8933:379;410:222:89;;689:66:112;;;;9281:20:175;;410:222:89;;9281:20:175;;;;410:222:89;;;;;;;;;8957:1:175;410:222:89;;;;;;;;;;;;8957:1:175;410:222:89;;;;;;;;;;;;;;9281:20:175;;;;410:222:89;;;;;;;;;;;;;;;;;;;-1:-1:-1;410:222:89;",
    "linkReferences": {},
    "immutableReferences": {
      "17638": [
        {
          "start": 172,
          "length": 32
        },
        {
          "start": 467,
          "length": 32
        },
        {
          "start": 1152,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "current()": "9fa6a6e3",
    "increment()": "d09de08a",
    "proxiableUUID()": "52d1902d",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"current\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/openzeppelin/local/mocks/proxy/UUPSUpgradeableMock.sol\":\"UUPSUpgradeableMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/openzeppelin/local/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"contracts/.cache/openzeppelin/local/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"contracts/.cache/openzeppelin/local/mocks/proxy/UUPSUpgradeableMock.sol\":{\"keccak256\":\"0x8201e672d36ff4f21165c71148c2dd58347540cb6bedfb8209985e8f86be205d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://229beb16938143ab07511a57650c6535d3e4586b3e6d6374b948837ad5438026\",\"dweb:/ipfs/QmRPicUUz4RFTFLeoi2Xz8moHbxuyMLKKgqWPRVjejpQxN\"]},\"contracts/.cache/openzeppelin/local/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"contracts/.cache/openzeppelin/local/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"contracts/.cache/openzeppelin/local/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"contracts/.cache/openzeppelin/local/utils/Address.sol\":{\"keccak256\":\"0x277775f22320f32702fd59efea3ce2758a29ab81cf2493fa7ed56514c57e7444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fca7b7cf5c2f491133149ea6b44519030daf917867406935b25e6f6b2fb61ac\",\"dweb:/ipfs/QmZZHqpknhqvtBST1JNefHXPe4U7EzefQdySDsemf41qrn\"]},\"contracts/.cache/openzeppelin/local/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/.cache/openzeppelin/local/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "current",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increment"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/openzeppelin/local/mocks/proxy/UUPSUpgradeableMock.sol": "UUPSUpgradeableMock"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/openzeppelin/local/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/mocks/proxy/UUPSUpgradeableMock.sol": {
        "keccak256": "0x8201e672d36ff4f21165c71148c2dd58347540cb6bedfb8209985e8f86be205d",
        "urls": [
          "bzz-raw://229beb16938143ab07511a57650c6535d3e4586b3e6d6374b948837ad5438026",
          "dweb:/ipfs/QmRPicUUz4RFTFLeoi2Xz8moHbxuyMLKKgqWPRVjejpQxN"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/Address.sol": {
        "keccak256": "0x277775f22320f32702fd59efea3ce2758a29ab81cf2493fa7ed56514c57e7444",
        "urls": [
          "bzz-raw://4fca7b7cf5c2f491133149ea6b44519030daf917867406935b25e6f6b2fb61ac",
          "dweb:/ipfs/QmZZHqpknhqvtBST1JNefHXPe4U7EzefQdySDsemf41qrn"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/openzeppelin/local/mocks/proxy/UUPSUpgradeableMock.sol",
    "id": 13595,
    "exportedSymbols": {
      "Address": [
        28167
      ],
      "Counters": [
        29960
      ],
      "ERC1967Upgrade": [
        16791
      ],
      "IBeacon": [
        16919
      ],
      "IERC1822Proxiable": [
        9597
      ],
      "IERC1967": [
        9230
      ],
      "NonUpgradeableMock": [
        13544
      ],
      "StorageSlot": [
        30341
      ],
      "UUPSUpgradeable": [
        17738
      ],
      "UUPSUpgradeableMock": [
        13556
      ],
      "UUPSUpgradeableUnsafeMock": [
        13594
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:999:89",
    "nodes": [
      {
        "id": 13518,
        "nodeType": "PragmaDirective",
        "src": "33:23:89",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 13519,
        "nodeType": "ImportDirective",
        "src": "58:47:89",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/proxy/utils/UUPSUpgradeable.sol",
        "file": "../../proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13595,
        "sourceUnit": 17739,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13520,
        "nodeType": "ImportDirective",
        "src": "106:34:89",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/utils/Counters.sol",
        "file": "../../utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13595,
        "sourceUnit": 29961,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13544,
        "nodeType": "ContractDefinition",
        "src": "142:266:89",
        "nodes": [
          {
            "id": 13523,
            "nodeType": "VariableDeclaration",
            "src": "176:34:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_counter",
            "nameLocation": "202:8:89",
            "scope": 13544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$29892_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 13522,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13521,
                "name": "Counters.Counter",
                "nameLocations": [
                  "176:8:89",
                  "185:7:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29892,
                "src": "176:16:89"
              },
              "referencedDeclaration": 29892,
              "src": "176:16:89",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$29892_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 13534,
            "nodeType": "FunctionDefinition",
            "src": "217:101:89",
            "nodes": [],
            "body": {
              "id": 13533,
              "nodeType": "Block",
              "src": "268:50:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13530,
                        "name": "_counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13523,
                        "src": "302:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$29892_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Counter_$29892_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      ],
                      "expression": {
                        "id": 13528,
                        "name": "Counters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29960,
                        "src": "285:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Counters_$29960_$",
                          "typeString": "type(library Counters)"
                        }
                      },
                      "id": 13529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "294:7:89",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29904,
                      "src": "285:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$29892_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 13531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "285:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13527,
                  "id": 13532,
                  "nodeType": "Return",
                  "src": "278:33:89"
                }
              ]
            },
            "functionSelector": "9fa6a6e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "226:7:89",
            "parameters": {
              "id": 13524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:89"
            },
            "returnParameters": {
              "id": 13527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13534,
                  "src": "259:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:9:89"
            },
            "scope": 13544,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13543,
            "nodeType": "FunctionDefinition",
            "src": "324:82:89",
            "nodes": [],
            "body": {
              "id": 13542,
              "nodeType": "Block",
              "src": "354:52:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13539,
                        "name": "_counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13523,
                        "src": "390:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$29892_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Counter_$29892_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      ],
                      "expression": {
                        "id": 13537,
                        "name": "Counters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29960,
                        "src": "371:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Counters_$29960_$",
                          "typeString": "type(library Counters)"
                        }
                      },
                      "id": 13538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "380:9:89",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29918,
                      "src": "371:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$29892_storage_ptr_$returns$__$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 13540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "371:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 13536,
                  "id": 13541,
                  "nodeType": "Return",
                  "src": "364:35:89"
                }
              ]
            },
            "functionSelector": "d09de08a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "333:9:89",
            "parameters": {
              "id": 13535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:2:89"
            },
            "returnParameters": {
              "id": 13536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:0:89"
            },
            "scope": 13544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "NonUpgradeableMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13544
        ],
        "name": "NonUpgradeableMock",
        "nameLocation": "151:18:89",
        "scope": 13595,
        "usedErrors": []
      },
      {
        "id": 13556,
        "nodeType": "ContractDefinition",
        "src": "410:222:89",
        "nodes": [
          {
            "id": 13555,
            "nodeType": "FunctionDefinition",
            "src": "574:56:89",
            "nodes": [],
            "body": {
              "id": 13554,
              "nodeType": "Block",
              "src": "628:2:89",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              17737
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_authorizeUpgrade",
            "nameLocation": "583:17:89",
            "overrides": {
              "id": 13552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "619:8:89"
            },
            "parameters": {
              "id": 13551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13555,
                  "src": "601:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:9:89"
            },
            "returnParameters": {
              "id": 13553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:89"
            },
            "scope": 13556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13545,
              "name": "NonUpgradeableMock",
              "nameLocations": [
                "442:18:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13544,
              "src": "442:18:89"
            },
            "id": 13546,
            "nodeType": "InheritanceSpecifier",
            "src": "442:18:89"
          },
          {
            "baseName": {
              "id": 13547,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "462:15:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17738,
              "src": "462:15:89"
            },
            "id": 13548,
            "nodeType": "InheritanceSpecifier",
            "src": "462:15:89"
          }
        ],
        "canonicalName": "UUPSUpgradeableMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13556,
          17738,
          16791,
          9230,
          9597,
          13544
        ],
        "name": "UUPSUpgradeableMock",
        "nameLocation": "419:19:89",
        "scope": 13595,
        "usedErrors": []
      },
      {
        "id": 13594,
        "nodeType": "ContractDefinition",
        "src": "634:397:89",
        "nodes": [
          {
            "id": 13576,
            "nodeType": "FunctionDefinition",
            "src": "698:148:89",
            "nodes": [],
            "body": {
              "id": 13575,
              "nodeType": "Block",
              "src": "760:86:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13567,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13560,
                        "src": "803:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 13570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "828:2:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 13569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "822:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 13568,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "822:5:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "822:9:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 13572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "833:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 13564,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16791,
                        "src": "770:14:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$16791_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 13566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "785:17:89",
                      "memberName": "_upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16586,
                      "src": "770:32:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 13573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:69:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13574,
                  "nodeType": "ExpressionStatement",
                  "src": "770:69:89"
                }
              ]
            },
            "baseFunctions": [
              17710
            ],
            "functionSelector": "3659cfe6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeTo",
            "nameLocation": "707:9:89",
            "overrides": {
              "id": 13562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "751:8:89"
            },
            "parameters": {
              "id": 13561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13560,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "725:17:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 13576,
                  "src": "717:25:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:27:89"
            },
            "returnParameters": {
              "id": 13563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:0:89"
            },
            "scope": 13594,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13593,
            "nodeType": "FunctionDefinition",
            "src": "852:177:89",
            "nodes": [],
            "body": {
              "id": 13592,
              "nodeType": "Block",
              "src": "948:81:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13587,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13578,
                        "src": "991:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13588,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13580,
                        "src": "1010:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 13589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1016:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 13584,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16791,
                        "src": "958:14:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$16791_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 13586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "973:17:89",
                      "memberName": "_upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16586,
                      "src": "958:32:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 13590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:64:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13591,
                  "nodeType": "ExpressionStatement",
                  "src": "958:64:89"
                }
              ]
            },
            "baseFunctions": [
              17731
            ],
            "functionSelector": "4f1ef286",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeToAndCall",
            "nameLocation": "861:16:89",
            "overrides": {
              "id": 13582,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "939:8:89"
            },
            "parameters": {
              "id": 13581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13578,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "886:17:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 13593,
                  "src": "878:25:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13580,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "918:4:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 13593,
                  "src": "905:17:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13579,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:46:89"
            },
            "returnParameters": {
              "id": 13583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:89"
            },
            "scope": 13594,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13557,
              "name": "UUPSUpgradeableMock",
              "nameLocations": [
                "672:19:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13556,
              "src": "672:19:89"
            },
            "id": 13558,
            "nodeType": "InheritanceSpecifier",
            "src": "672:19:89"
          }
        ],
        "canonicalName": "UUPSUpgradeableUnsafeMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13594,
          13556,
          17738,
          16791,
          9230,
          9597,
          13544
        ],
        "name": "UUPSUpgradeableUnsafeMock",
        "nameLocation": "643:25:89",
        "scope": 13595,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 89
}