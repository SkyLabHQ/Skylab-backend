{
  "abi": [],
  "bytecode": {
    "object": "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b0b3bcd7bf13d09decba6bfadaf5813c493dcaff246d5a1bce9efe1c957435a564736f6c63430008130033",
    "sourceMap": "377:826:11:-:0;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x600080fdfea2646970667358221220b0b3bcd7bf13d09decba6bfadaf5813c493dcaff246d5a1bce9efe1c957435a564736f6c63430008130033",
    "sourceMap": "377:826:11:-:0;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Primitives for cross-chain aware contracts using the https://docs.tokenbridge.net/amb-bridge/about-amb-bridge[AMB] family of bridges.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/openzeppelin/local/crosschain/amb/LibAMB.sol\":\"LibAMB\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/openzeppelin/local/crosschain/amb/LibAMB.sol\":{\"keccak256\":\"0xb4759c7bd140f662508f815635b403c45e281141e5f197d940e5e1abe5954bde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2108f273dbc32516100f41bea8bc24e0d02a4ea8455b46a6b3814b4cf83161a5\",\"dweb:/ipfs/QmPY2SqejkAsF8G6PahKniUFTjLbG2YiTrgebVE3LXZZBd\"]},\"contracts/.cache/openzeppelin/local/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"contracts/.cache/openzeppelin/local/vendor/amb/IAMB.sol\":{\"keccak256\":\"0x183325086da5dcd2b094f9adea2fbc75293eb9a1cb6b74b30e4f74f7293e8adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae1f2c4946403be9963459bcd37b7d6ac8304ebbdcf28c73250e66ba112ece7e\",\"dweb:/ipfs/QmRK9xvhqpFGZM6GzoqHH64KxgZZuJ7bpzmhG5sDzACi2G\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/openzeppelin/local/crosschain/amb/LibAMB.sol": "LibAMB"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/openzeppelin/local/crosschain/amb/LibAMB.sol": {
        "keccak256": "0xb4759c7bd140f662508f815635b403c45e281141e5f197d940e5e1abe5954bde",
        "urls": [
          "bzz-raw://2108f273dbc32516100f41bea8bc24e0d02a4ea8455b46a6b3814b4cf83161a5",
          "dweb:/ipfs/QmPY2SqejkAsF8G6PahKniUFTjLbG2YiTrgebVE3LXZZBd"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/crosschain/errors.sol": {
        "keccak256": "0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3",
        "urls": [
          "bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a",
          "dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/vendor/amb/IAMB.sol": {
        "keccak256": "0x183325086da5dcd2b094f9adea2fbc75293eb9a1cb6b74b30e4f74f7293e8adb",
        "urls": [
          "bzz-raw://ae1f2c4946403be9963459bcd37b7d6ac8304ebbdcf28c73250e66ba112ece7e",
          "dweb:/ipfs/QmRK9xvhqpFGZM6GzoqHH64KxgZZuJ7bpzmhG5sDzACi2G"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/openzeppelin/local/crosschain/amb/LibAMB.sol",
    "id": 1707,
    "exportedSymbols": {
      "AMB_Bridge": [
        40602
      ],
      "InvalidCrossChainSender": [
        1916
      ],
      "LibAMB": [
        1706
      ],
      "NotCrossChainCall": [
        1910
      ]
    },
    "nodeType": "SourceUnit",
    "src": "109:1095:11",
    "nodes": [
      {
        "id": 1664,
        "nodeType": "PragmaDirective",
        "src": "109:23:11",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 1666,
        "nodeType": "ImportDirective",
        "src": "134:61:11",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/vendor/amb/IAMB.sol",
        "file": "../../vendor/amb/IAMB.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1707,
        "sourceUnit": 40603,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1665,
              "name": "IAMB",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40602,
              "src": "142:4:11",
              "typeDescriptions": {}
            },
            "local": "AMB_Bridge",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1667,
        "nodeType": "ImportDirective",
        "src": "196:23:11",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/crosschain/errors.sol",
        "file": "../errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1707,
        "sourceUnit": 1917,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1706,
        "nodeType": "ContractDefinition",
        "src": "377:826:11",
        "nodes": [
          {
            "id": 1682,
            "nodeType": "FunctionDefinition",
            "src": "535:111:11",
            "nodes": [],
            "body": {
              "id": 1681,
              "nodeType": "Block",
              "src": "602:44:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1676,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "619:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "623:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1678,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1671,
                      "src": "633:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "619:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1675,
                  "id": 1680,
                  "nodeType": "Return",
                  "src": "612:27:11"
                }
              ]
            },
            "documentation": {
              "id": 1669,
              "nodeType": "StructuredDocumentation",
              "src": "398:132:11",
              "text": " @dev Returns whether the current function call is the result of a\n cross-chain message relayed by `bridge`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCrossChain",
            "nameLocation": "544:12:11",
            "parameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1671,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "565:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1682,
                  "src": "557:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:16:11"
            },
            "returnParameters": {
              "id": 1675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1674,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1682,
                  "src": "596:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1673,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "595:6:11"
            },
            "scope": 1706,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1705,
            "nodeType": "FunctionDefinition",
            "src": "1006:195:11",
            "nodes": [],
            "body": {
              "id": 1704,
              "nodeType": "Block",
              "src": "1080:121:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1094:21:11",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1691,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "1108:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1690,
                        "name": "isCrossChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "1095:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1095:20:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1697,
                  "nodeType": "IfStatement",
                  "src": "1090:53:11",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1694,
                        "name": "NotCrossChainCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1124:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1124:19:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1696,
                    "nodeType": "RevertStatement",
                    "src": "1117:26:11"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1699,
                            "name": "bridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "1171:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1698,
                          "name": "AMB_Bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40602,
                          "src": "1160:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAMB_$40602_$",
                            "typeString": "type(contract IAMB)"
                          }
                        },
                        "id": 1700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1160:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAMB_$40602",
                          "typeString": "contract IAMB"
                        }
                      },
                      "id": 1701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1179:13:11",
                      "memberName": "messageSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40521,
                      "src": "1160:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1689,
                  "id": 1703,
                  "nodeType": "Return",
                  "src": "1153:41:11"
                }
              ]
            },
            "documentation": {
              "id": 1683,
              "nodeType": "StructuredDocumentation",
              "src": "652:349:11",
              "text": " @dev Returns the address of the sender that triggered the current\n cross-chain message through `bridge`.\n NOTE: {isCrossChain} should be checked before trying to recover the\n sender, as it will revert with `NotCrossChainCall` if the current\n function call is not the result of a cross-chain message."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "crossChainSender",
            "nameLocation": "1015:16:11",
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1685,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1040:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1705,
                  "src": "1032:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:16:11"
            },
            "returnParameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1705,
                  "src": "1071:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:9:11"
            },
            "scope": 1706,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LibAMB",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1668,
          "nodeType": "StructuredDocumentation",
          "src": "221:155:11",
          "text": " @dev Primitives for cross-chain aware contracts using the\n https://docs.tokenbridge.net/amb-bridge/about-amb-bridge[AMB]\n family of bridges."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1706
        ],
        "name": "LibAMB",
        "nameLocation": "385:6:11",
        "scope": 1707,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 11
}