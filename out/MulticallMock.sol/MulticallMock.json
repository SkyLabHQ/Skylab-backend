{
  "abi": [
    {
      "inputs": [],
      "name": "callRevertTest",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callTest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657610397908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c90816321615e9c146100865781633c67684514610045575063ac9650d81461004057600080fd5b610134565b3461008357806003193601126100835760405162461bcd60e51b81526020600482015260066024820152651c995d995c9d60d21b6044820152606490fd5b80fd5b34610083578060031936011261008357600160805260206080f35b6020808201818352835180915260408301918060408360051b860101950193600080915b8483106100d6575050505050505090565b90919293949596603f19828203018752848851805190818452855b8281106101205750508083018201859052601f01601f19169091018101978101960194939260010191906100c5565b8181018401518582018501528893016100f1565b3461019e57602036600319011261019e5767ffffffffffffffff60043581811161019e573660238201121561019e57806004013591821161019e573660248360051b8301011161019e5761019a91602461018e92016102b7565b604051918291826100a1565b0390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176101df57604052565b6101a3565b67ffffffffffffffff81116101df5760051b60200190565b634e487b7160e01b600052603260045260246000fd5b91908110156102545760051b81013590601e198136030182121561019e57019081359167ffffffffffffffff831161019e57602001823603811361019e579190565b6101fc565b908092918237016000815290565b3d1561029e573d9067ffffffffffffffff82116101df57610291601f8301601f19166020016101b9565b9182523d6000602084013e565b606090565b80518210156102545760209160051b010190565b6102c86102c3836101e4565b6101b9565b82815291601f196102d8826101e4565b0160005b81811061035057505060005b8181106102f55750505090565b600080610303838587610212565b9061031360405180938193610259565b0390305af490610321610267565b91156103465760019161033482876102a3565b5261033f81866102a3565b50016102e8565b3d6000803e3d6000fd5b8060606020809388010152016102dc56fea26469706673582212205f61bf494338e6cf7e5c5dfe8eada754cdd4c2e10bc29cd8b7de9469e2cad45964736f6c63430008130033",
    "sourceMap": "85:200:519:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b6000803560e01c90816321615e9c146100865781633c67684514610045575063ac9650d81461004057600080fd5b610134565b3461008357806003193601126100835760405162461bcd60e51b81526020600482015260066024820152651c995d995c9d60d21b6044820152606490fd5b80fd5b34610083578060031936011261008357600160805260206080f35b6020808201818352835180915260408301918060408360051b860101950193600080915b8483106100d6575050505050505090565b90919293949596603f19828203018752848851805190818452855b8281106101205750508083018201859052601f01601f19169091018101978101960194939260010191906100c5565b8181018401518582018501528893016100f1565b3461019e57602036600319011261019e5767ffffffffffffffff60043581811161019e573660238201121561019e57806004013591821161019e573660248360051b8301011161019e5761019a91602461018e92016102b7565b604051918291826100a1565b0390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176101df57604052565b6101a3565b67ffffffffffffffff81116101df5760051b60200190565b634e487b7160e01b600052603260045260246000fd5b91908110156102545760051b81013590601e198136030182121561019e57019081359167ffffffffffffffff831161019e57602001823603811361019e579190565b6101fc565b908092918237016000815290565b3d1561029e573d9067ffffffffffffffff82116101df57610291601f8301601f19166020016101b9565b9182523d6000602084013e565b606090565b80518210156102545760209160051b010190565b6102c86102c3836101e4565b6101b9565b82815291601f196102d8826101e4565b0160005b81811061035057505060005b8181106102f55750505090565b600080610303838587610212565b9061031360405180938193610259565b0390305af490610321610267565b91156103465760019161033482876102a3565b5261033f81866102a3565b50016102e8565b3d6000803e3d6000fd5b8060606020809388010152016102dc56fea26469706673582212205f61bf494338e6cf7e5c5dfe8eada754cdd4c2e10bc29cd8b7de9469e2cad45964736f6c63430008130033",
    "sourceMap": "85:200:519:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;260:16:519;;85:200;;260:16;;85:200;;;;;;-1:-1:-1;;;85:200:519;;;;;;260:16;85:200;;;;;;;;;;;;;;;196:1;85:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;85:200:519;;;;;;;;;;-1:-1:-1;;85:200:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;85:200:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;85:200:519;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;85:200:519;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;85:200:519;;;;:::i;:::-;;;;;-1:-1:-1;85:200:519;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;310:640:518:-;85:200:519;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;85:200:519;;;:::i;:::-;;-1:-1:-1;85:200:519;;;;;;478:9:518;;-1:-1:-1;489:15:518;;;;;;929:14;;;310:640;:::o;506:3::-;-1:-1:-1;598:7:518;;;;;;:::i;:::-;85:200:519;;;;;;;;;:::i;:::-;571:35:518;579:4;;571:35;;;;;:::i;:::-;625:270;;;;85:200:519;660:23:518;;;;;:::i;:::-;;;;;;:::i;:::-;;85:200:519;478:9:518;;625:270;730:147;-1:-1:-1;730:147:518;;;-1:-1:-1;730:147:518;85:200:519;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "callRevertTest()": "3c676845",
    "callTest()": "21615e9c",
    "multicall(bytes[])": "ac9650d8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"callRevertTest\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callTest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"params\":{\"data\":\"array of function call data payloads\"},\"returns\":{\"results\":\"array of function call results\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"batch function calls to the contract and return the results of each\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/solidstate/local/utils/MulticallMock.sol\":\"MulticallMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/solidstate/local/utils/IMulticall.sol\":{\"keccak256\":\"0x20f2f54550c30aaab761fcc4f7cd5106fd78328af01b461df2946bf2f21c1ca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90ff0843d02d13b70ce3eaba6fa52b0b9587691e28a0b6950a50691d60481e47\",\"dweb:/ipfs/QmRZqmR2w18DGXtCk3HtsERGVZixZiGQteh7B463wng3eT\"]},\"contracts/.cache/solidstate/local/utils/Multicall.sol\":{\"keccak256\":\"0xa1c46c5256c650a98cccc7f2f30171051e8bb0dbe4335bde865ea72859e0b46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0df853f16f01f6489fefb93a70f1ee2e60758f05dd90eca9efd735f765bd3e\",\"dweb:/ipfs/QmVyQY6EFcXgDCKPFmTzydendrQrGnf7Y2eJQv8ToZ1dkx\"]},\"contracts/.cache/solidstate/local/utils/MulticallMock.sol\":{\"keccak256\":\"0x02eea0017478e94de7a194dabe18bb116fb797afde6bbe181fdad4e6a4d58d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d7cb43b8703bcd9069d0afdde6168642cdaaf328b4033f17b67778d8e3596b2\",\"dweb:/ipfs/QmdP85Jkmm9pgpw73WPvrxZP3S39jX6XEHWj9TjR5Pnd5C\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "callRevertTest"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "callTest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes[])": {
            "params": {
              "data": "array of function call data payloads"
            },
            "returns": {
              "results": "array of function call results"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "multicall(bytes[])": {
            "notice": "batch function calls to the contract and return the results of each"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/solidstate/local/utils/MulticallMock.sol": "MulticallMock"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/solidstate/local/utils/IMulticall.sol": {
        "keccak256": "0x20f2f54550c30aaab761fcc4f7cd5106fd78328af01b461df2946bf2f21c1ca2",
        "urls": [
          "bzz-raw://90ff0843d02d13b70ce3eaba6fa52b0b9587691e28a0b6950a50691d60481e47",
          "dweb:/ipfs/QmRZqmR2w18DGXtCk3HtsERGVZixZiGQteh7B463wng3eT"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/utils/Multicall.sol": {
        "keccak256": "0xa1c46c5256c650a98cccc7f2f30171051e8bb0dbe4335bde865ea72859e0b46e",
        "urls": [
          "bzz-raw://bf0df853f16f01f6489fefb93a70f1ee2e60758f05dd90eca9efd735f765bd3e",
          "dweb:/ipfs/QmVyQY6EFcXgDCKPFmTzydendrQrGnf7Y2eJQv8ToZ1dkx"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/utils/MulticallMock.sol": {
        "keccak256": "0x02eea0017478e94de7a194dabe18bb116fb797afde6bbe181fdad4e6a4d58d1e",
        "urls": [
          "bzz-raw://8d7cb43b8703bcd9069d0afdde6168642cdaaf328b4033f17b67778d8e3596b2",
          "dweb:/ipfs/QmdP85Jkmm9pgpw73WPvrxZP3S39jX6XEHWj9TjR5Pnd5C"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/solidstate/local/utils/MulticallMock.sol",
    "id": 64317,
    "exportedSymbols": {
      "IMulticall": [
        64019
      ],
      "Multicall": [
        64294
      ],
      "MulticallMock": [
        64316
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:253:519",
    "nodes": [
      {
        "id": 64296,
        "nodeType": "PragmaDirective",
        "src": "33:23:519",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 64297,
        "nodeType": "ImportDirective",
        "src": "58:25:519",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/utils/Multicall.sol",
        "file": "./Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64317,
        "sourceUnit": 64295,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 64316,
        "nodeType": "ContractDefinition",
        "src": "85:200:519",
        "nodes": [
          {
            "id": 64307,
            "nodeType": "FunctionDefinition",
            "src": "127:77:519",
            "nodes": [],
            "body": {
              "id": 64306,
              "nodeType": "Block",
              "src": "179:25:519",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 64304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "196:1:519",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 64303,
                  "id": 64305,
                  "nodeType": "Return",
                  "src": "189:8:519"
                }
              ]
            },
            "functionSelector": "21615e9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callTest",
            "nameLocation": "136:8:519",
            "parameters": {
              "id": 64300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "144:2:519"
            },
            "returnParameters": {
              "id": 64303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64307,
                  "src": "170:7:519",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:519",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "169:9:519"
            },
            "scope": 64316,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64315,
            "nodeType": "FunctionDefinition",
            "src": "210:73:519",
            "nodes": [],
            "body": {
              "id": 64314,
              "nodeType": "Block",
              "src": "250:33:519",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726576657274",
                        "id": 64311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "267:8:519",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6de185cadd5025ad112692ff4c6e4d195daa4aeca2980b12e73362933d065f2",
                          "typeString": "literal_string \"revert\""
                        },
                        "value": "revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a6de185cadd5025ad112692ff4c6e4d195daa4aeca2980b12e73362933d065f2",
                          "typeString": "literal_string \"revert\""
                        }
                      ],
                      "id": 64310,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "260:6:519",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 64312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "260:16:519",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64313,
                  "nodeType": "ExpressionStatement",
                  "src": "260:16:519"
                }
              ]
            },
            "functionSelector": "3c676845",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callRevertTest",
            "nameLocation": "219:14:519",
            "parameters": {
              "id": 64308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:519"
            },
            "returnParameters": {
              "id": 64309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:519"
            },
            "scope": 64316,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64298,
              "name": "Multicall",
              "nameLocations": [
                "111:9:519"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64294,
              "src": "111:9:519"
            },
            "id": 64299,
            "nodeType": "InheritanceSpecifier",
            "src": "111:9:519"
          }
        ],
        "canonicalName": "MulticallMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64316,
          64294,
          64019
        ],
        "name": "MulticallMock",
        "nameLocation": "94:13:519",
        "scope": 64317,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 519
}