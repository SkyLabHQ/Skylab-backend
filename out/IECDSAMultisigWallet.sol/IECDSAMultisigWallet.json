{
  "abi": [
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__AddSignerFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__InsufficientSigners",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__InvalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__MessageValueMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__QuorumNotReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__RecoveredSignerNotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__RemoveSignerFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__SignerAlreadySigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSAMultisigWallet__SignerLimitReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "delegate",
              "type": "bool"
            }
          ],
          "internalType": "struct IECDSAMultisigWalletInternal.Parameters",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct IECDSAMultisigWalletInternal.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "verifyAndExecute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])": "04887cf5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__AddSignerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__InsufficientSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__MessageValueMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__QuorumNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__RecoveredSignerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__RemoveSignerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__SignerAlreadySigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAMultisigWallet__SignerLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"delegate\",\"type\":\"bool\"}],\"internalType\":\"struct IECDSAMultisigWalletInternal.Parameters\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct IECDSAMultisigWalletInternal.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"}],\"name\":\"verifyAndExecute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])\":{\"details\":\"message parameters must be included in signature\",\"params\":{\"parameters\":\"structured call parameters (target, data, value, delegate)\",\"signatures\":\"array of structured signature data (signature, nonce)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])\":{\"notice\":\"verify signatures and execute \\\"call\\\" or \\\"delegatecall\\\" with given parameters\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol\":\"IECDSAMultisigWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol\":{\"keccak256\":\"0x2c92530539e37754a2db8eee9f1b52adf54143a7513ac951dc85ffd33eeb2a16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb7713cb08093b496c57081d9136fa2e31b4599dd25b69827f3948bd883911a\",\"dweb:/ipfs/QmdG6riiFyiSE87KU67ahEbXFtHhHrqUExJ9mW2a3vLMfN\"]},\"contracts/.cache/solidstate/local/multisig/IECDSAMultisigWalletInternal.sol\":{\"keccak256\":\"0xc28e9b028bfa949f8759f457dd81aa6ad781312aad2c179cfc35d1c83e62ccb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e12bf9e39b368946f95e21ed2295fb8b0163f024a397489be74f0cb8fdf1ee0\",\"dweb:/ipfs/QmVv9ZVRnnKZRGg4C4stsBF5N4sxZ9eQ4MC5X1ZwzMLeJ8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__AddSignerFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__InsufficientSigners"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__InvalidNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__MessageValueMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__QuorumNotReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__RecoveredSignerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__RemoveSignerFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__SignerAlreadySigned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAMultisigWallet__SignerLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "struct IECDSAMultisigWalletInternal.Parameters",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "delegate",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct IECDSAMultisigWalletInternal.Signature[]",
              "name": "signatures",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "verifyAndExecute",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])": {
            "details": "message parameters must be included in signature",
            "params": {
              "parameters": "structured call parameters (target, data, value, delegate)",
              "signatures": "array of structured signature data (signature, nonce)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "verifyAndExecute((address,bytes,uint256,bool),(bytes,uint256)[])": {
            "notice": "verify signatures and execute \"call\" or \"delegatecall\" with given parameters"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol": "IECDSAMultisigWallet"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol": {
        "keccak256": "0x2c92530539e37754a2db8eee9f1b52adf54143a7513ac951dc85ffd33eeb2a16",
        "urls": [
          "bzz-raw://abb7713cb08093b496c57081d9136fa2e31b4599dd25b69827f3948bd883911a",
          "dweb:/ipfs/QmdG6riiFyiSE87KU67ahEbXFtHhHrqUExJ9mW2a3vLMfN"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWalletInternal.sol": {
        "keccak256": "0xc28e9b028bfa949f8759f457dd81aa6ad781312aad2c179cfc35d1c83e62ccb7",
        "urls": [
          "bzz-raw://1e12bf9e39b368946f95e21ed2295fb8b0163f024a397489be74f0cb8fdf1ee0",
          "dweb:/ipfs/QmVv9ZVRnnKZRGg4C4stsBF5N4sxZ9eQ4MC5X1ZwzMLeJ8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWallet.sol",
    "id": 50530,
    "exportedSymbols": {
      "IECDSAMultisigWallet": [
        50529
      ],
      "IECDSAMultisigWalletInternal": [
        50564
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:662:344",
    "nodes": [
      {
        "id": 50511,
        "nodeType": "PragmaDirective",
        "src": "33:23:344",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 50513,
        "nodeType": "ImportDirective",
        "src": "58:80:344",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/multisig/IECDSAMultisigWalletInternal.sol",
        "file": "./IECDSAMultisigWalletInternal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50530,
        "sourceUnit": 50565,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50512,
              "name": "IECDSAMultisigWalletInternal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50564,
              "src": "66:28:344",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50529,
        "nodeType": "ContractDefinition",
        "src": "140:554:344",
        "nodes": [
          {
            "id": 50528,
            "nodeType": "FunctionDefinition",
            "src": "541:151:344",
            "nodes": [],
            "documentation": {
              "id": 50516,
              "nodeType": "StructuredDocumentation",
              "src": "209:327:344",
              "text": " @notice verify signatures and execute \"call\" or \"delegatecall\" with given parameters\n @dev message parameters must be included in signature\n @param parameters structured call parameters (target, data, value, delegate)\n @param signatures array of structured signature data (signature, nonce)"
            },
            "functionSelector": "04887cf5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAndExecute",
            "nameLocation": "550:16:344",
            "parameters": {
              "id": 50524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50519,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "585:10:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 50528,
                  "src": "567:28:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Parameters_$50558_memory_ptr",
                    "typeString": "struct IECDSAMultisigWalletInternal.Parameters"
                  },
                  "typeName": {
                    "id": 50518,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50517,
                      "name": "Parameters",
                      "nameLocations": [
                        "567:10:344"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50558,
                      "src": "567:10:344"
                    },
                    "referencedDeclaration": 50558,
                    "src": "567:10:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$50558_storage_ptr",
                      "typeString": "struct IECDSAMultisigWalletInternal.Parameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50523,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "616:10:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 50528,
                  "src": "597:29:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Signature_$50563_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IECDSAMultisigWalletInternal.Signature[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50521,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50520,
                        "name": "Signature",
                        "nameLocations": [
                          "597:9:344"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 50563,
                        "src": "597:9:344"
                      },
                      "referencedDeclaration": 50563,
                      "src": "597:9:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Signature_$50563_storage_ptr",
                        "typeString": "struct IECDSAMultisigWalletInternal.Signature"
                      }
                    },
                    "id": 50522,
                    "nodeType": "ArrayTypeName",
                    "src": "597:11:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Signature_$50563_storage_$dyn_storage_ptr",
                      "typeString": "struct IECDSAMultisigWalletInternal.Signature[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:61:344"
            },
            "returnParameters": {
              "id": 50527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50528,
                  "src": "678:12:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50525,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "677:14:344"
            },
            "scope": 50529,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50514,
              "name": "IECDSAMultisigWalletInternal",
              "nameLocations": [
                "174:28:344"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50564,
              "src": "174:28:344"
            },
            "id": 50515,
            "nodeType": "InheritanceSpecifier",
            "src": "174:28:344"
          }
        ],
        "canonicalName": "IECDSAMultisigWallet",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          50529,
          50564
        ],
        "name": "IECDSAMultisigWallet",
        "nameLocation": "150:20:344",
        "scope": 50530,
        "usedErrors": [
          50533,
          50535,
          50537,
          50539,
          50541,
          50543,
          50545,
          50547,
          50549
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 344
}