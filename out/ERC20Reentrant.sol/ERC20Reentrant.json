{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "functionCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum ERC20Reentrant.Type",
          "name": "when",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "scheduleReenter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803462000331576040906001600160401b0390808301828111828210176200031b578352600491828252602063151154d560e21b818401528451908582018281108482111762000306578652600391828152621514d560ea1b8282015284519184831162000208578354926001968785811c95168015620002fb575b83861014620002e6578190601f9586811162000290575b50839086831160011462000229576000926200021d575b505060001982871b1c191690871b1784555b8151948511620002085786548681811c91168015620001fd575b82821014620001e8578381116200019d575b50809285116001146200012f575093839491849260009562000123575b50501b92600019911b1c19161790555b51610de99081620003378239f35b01519350388062000105565b92919084601f1981168860005285600020956000905b8983831062000182575050501062000167575b50505050811b01905562000115565b01519060f884600019921b161c191690553880808062000158565b85870151895590970196948501948893509081019062000145565b87600052816000208480880160051c820192848910620001de575b0160051c019087905b828110620001d1575050620000e8565b60008155018790620001c1565b92508192620001b8565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000d6565b604187634e487b7160e01b6000525260246000fd5b015190503880620000aa565b90899350601f1983169188600052856000209260005b8782821062000279575050841162000260575b505050811b018455620000bc565b015160001983891b60f8161c1916905538808062000252565b8385015186558d979095019493840193016200023f565b90915086600052836000208680850160051c820192868610620002dc575b918b91869594930160051c01915b828110620002cc57505062000093565b600081558594508b9101620002bc565b92508192620002ae565b602289634e487b7160e01b6000525260246000fd5b94607f16946200007c565b604186634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146106ef57508163095ea7b3146106c557816318160ddd146106a657816323b872dd146105dc578163313ce567146105c0578163395093511461055957816370a082311461052257816395d89b411461043b578163a0b5ffb01461039e578163a457c2d7146102f9578163a9059cbb146102c8578163cd594b63146100ff575063dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d0610800565b6100d861081b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b83346102c55760603660031901126102c55781359160038310156100fb5761012561081b565b926044359067ffffffffffffffff928383116102bd57366023840112156102bd578201359283116102c157602494368685850101116102bd5760ff60055491610100600160a81b039060081b169216906affffffffffffffffffffff60a81b161717600555610195600654610885565b601f811161025e575b508290601f83116001146101de57908394918394936101d1575b5050508160011b916000199060031b1c19161760065580f35b01013590508380806101b8565b601f198316947ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f92855b8781106102445750846001969710610228575b50505050811b0160065580f35b60001960f88660031b161c19920101351690558380808061021b565b909360206001819285888801013581550195019101610208565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f601f840160051c810191602085106102b3575b601f0160051c01905b8181106102a8575061019e565b84815560010161029b565b9091508190610292565b8480fd5b8380fd5b80fd5b5050346100fb57806003193601126100fb576020906102f26102e8610800565b6024359033610963565b5160018152f35b905082346102c557826003193601126102c557610314610800565b918360243592338152600160205281812060018060a01b038616825260205220549082821061034d576020856102f28585038733610b84565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b9050346104375781600319360112610437576103b8610800565b6024359167ffffffffffffffff83116102bd57366023840112156102bd578201356103e281610869565b926103ef85519485610831565b8184523660248383010111610433579460208261041c959493602461042f99018387013784010152610c86565b90519182916020835260208301906107c0565b0390f35b8580fd5b8280fd5b919050346104375782600319360112610437578051918381549061045e82610885565b808652926001928084169081156104f7575060011461049b575b61042f8686610489828b0383610831565b519182916020835260208301906107c0565b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104df5750505061048982602061042f958201019438610478565b805460208787018101919091529095019481016104c1565b905061042f97508693506020925061048994915060ff191682840152151560051b8201019438610478565b5050346100fb5760203660031901126100fb5760209181906001600160a01b0361054a610800565b16815280845220549051908152f35b8284346102c557816003193601126102c557610573610800565b338252600160209081528383206001600160a01b03831684529052828220546024358101929083106105ad576020846102f2858533610b84565b634e487b7160e01b815260118552602490fd5b5050346100fb57816003193601126100fb576020905160128152f35b839150346100fb5760603660031901126100fb576105f8610800565b61060061081b565b91846044359460018060a01b03841681526001602052818120338252602052205490600019820361063a575b6020866102f2878787610963565b8482106106635750918391610658602096956102f295033383610b84565b91939481935061062c565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100fb57816003193601126100fb576020906002549051908152f35b5050346100fb57806003193601126100fb576020906102f26106e5610800565b6024359033610b84565b849084346104375782600319360112610437578260035461070f81610885565b80855291600191808316908115610798575060011461073b575b5050506104898261042f940383610831565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8286106107805750505061048982602061042f9582010194610729565b80546020878701810191909152909501948101610763565b61042f97508693506020925061048994915060ff191682840152151560051b82010194610729565b919082519283825260005b8481106107ec575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016107cb565b600435906001600160a01b038216820361081657565b600080fd5b602435906001600160a01b038216820361081657565b90601f8019910116810190811067ffffffffffffffff82111761085357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161085357601f01601f191660200190565b90600182811c921680156108b5575b602083101461089f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610894565b600654600092916108cf82610885565b8082529160019081811690811561094657506001146108ed57505050565b9192935060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f916000925b84841061092e57505060209250010190565b8054602085850181019190915290930192810161091c565b915050602093945060ff929192191683830152151560051b010190565b6001600160a01b03908116918215610b315781168015610ae05760055460ff81166003811015610aca57600114610aa5575b506000928084528360205260409485852054818110610a5257817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209285895288845203888820558487528787208181540190558751908152a36005549160ff8316906003821015610a3e5750600214610a1057505050565b610a3b9260ff1983166005555191610a3283610a2b816108bf565b0384610831565b60081c16610c86565b50565b634e487b7160e01b81526021600452602490fd5b865162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60ff198116600555604051610ac3918490610a3283610a2b816108bf565b5038610995565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610c355716918215610be55760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405190604082019282841067ffffffffffffffff8511176108535760008091610d0f95604052601e85527f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000602086015260208151910182855af13d15610d12573d91610cf283610869565b92610d006040519485610831565b83523d6000602085013e610d16565b90565b6060915b91929015610d785750815115610d2a575090565b3b15610d335790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610d8b5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610daf9060248301906107c0565b0390fdfea264697066735822122076648db9291c21bee8cfdf2c4884fedc5c89b4157a829b5031b5b232ed867eed64736f6c63430008130033",
    "sourceMap": "141:1153:88:-:0;;;;;;-1:-1:-1;;;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;-1:-1:-1;141:1153:88;;;;-1:-1:-1;;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;-1:-1:-1;141:1153:88;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;-1:-1:-1;141:1153:88;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;-1:-1:-1;141:1153:88;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;-1:-1:-1;141:1153:88;;-1:-1:-1;141:1153:88;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;-1:-1:-1;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;-1:-1:-1;141:1153:88;;;;;-1:-1:-1;141:1153:88;;;;;-1:-1:-1;141:1153:88;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146106ef57508163095ea7b3146106c557816318160ddd146106a657816323b872dd146105dc578163313ce567146105c0578163395093511461055957816370a082311461052257816395d89b411461043b578163a0b5ffb01461039e578163a457c2d7146102f9578163a9059cbb146102c8578163cd594b63146100ff575063dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d0610800565b6100d861081b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b83346102c55760603660031901126102c55781359160038310156100fb5761012561081b565b926044359067ffffffffffffffff928383116102bd57366023840112156102bd578201359283116102c157602494368685850101116102bd5760ff60055491610100600160a81b039060081b169216906affffffffffffffffffffff60a81b161717600555610195600654610885565b601f811161025e575b508290601f83116001146101de57908394918394936101d1575b5050508160011b916000199060031b1c19161760065580f35b01013590508380806101b8565b601f198316947ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f92855b8781106102445750846001969710610228575b50505050811b0160065580f35b60001960f88660031b161c19920101351690558380808061021b565b909360206001819285888801013581550195019101610208565b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f601f840160051c810191602085106102b3575b601f0160051c01905b8181106102a8575061019e565b84815560010161029b565b9091508190610292565b8480fd5b8380fd5b80fd5b5050346100fb57806003193601126100fb576020906102f26102e8610800565b6024359033610963565b5160018152f35b905082346102c557826003193601126102c557610314610800565b918360243592338152600160205281812060018060a01b038616825260205220549082821061034d576020856102f28585038733610b84565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b9050346104375781600319360112610437576103b8610800565b6024359167ffffffffffffffff83116102bd57366023840112156102bd578201356103e281610869565b926103ef85519485610831565b8184523660248383010111610433579460208261041c959493602461042f99018387013784010152610c86565b90519182916020835260208301906107c0565b0390f35b8580fd5b8280fd5b919050346104375782600319360112610437578051918381549061045e82610885565b808652926001928084169081156104f7575060011461049b575b61042f8686610489828b0383610831565b519182916020835260208301906107c0565b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104df5750505061048982602061042f958201019438610478565b805460208787018101919091529095019481016104c1565b905061042f97508693506020925061048994915060ff191682840152151560051b8201019438610478565b5050346100fb5760203660031901126100fb5760209181906001600160a01b0361054a610800565b16815280845220549051908152f35b8284346102c557816003193601126102c557610573610800565b338252600160209081528383206001600160a01b03831684529052828220546024358101929083106105ad576020846102f2858533610b84565b634e487b7160e01b815260118552602490fd5b5050346100fb57816003193601126100fb576020905160128152f35b839150346100fb5760603660031901126100fb576105f8610800565b61060061081b565b91846044359460018060a01b03841681526001602052818120338252602052205490600019820361063a575b6020866102f2878787610963565b8482106106635750918391610658602096956102f295033383610b84565b91939481935061062c565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100fb57816003193601126100fb576020906002549051908152f35b5050346100fb57806003193601126100fb576020906102f26106e5610800565b6024359033610b84565b849084346104375782600319360112610437578260035461070f81610885565b80855291600191808316908115610798575060011461073b575b5050506104898261042f940383610831565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8286106107805750505061048982602061042f9582010194610729565b80546020878701810191909152909501948101610763565b61042f97508693506020925061048994915060ff191682840152151560051b82010194610729565b919082519283825260005b8481106107ec575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016107cb565b600435906001600160a01b038216820361081657565b600080fd5b602435906001600160a01b038216820361081657565b90601f8019910116810190811067ffffffffffffffff82111761085357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161085357601f01601f191660200190565b90600182811c921680156108b5575b602083101461089f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610894565b600654600092916108cf82610885565b8082529160019081811690811561094657506001146108ed57505050565b9192935060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f916000925b84841061092e57505060209250010190565b8054602085850181019190915290930192810161091c565b915050602093945060ff929192191683830152151560051b010190565b6001600160a01b03908116918215610b315781168015610ae05760055460ff81166003811015610aca57600114610aa5575b506000928084528360205260409485852054818110610a5257817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209285895288845203888820558487528787208181540190558751908152a36005549160ff8316906003821015610a3e5750600214610a1057505050565b610a3b9260ff1983166005555191610a3283610a2b816108bf565b0384610831565b60081c16610c86565b50565b634e487b7160e01b81526021600452602490fd5b865162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60ff198116600555604051610ac3918490610a3283610a2b816108bf565b5038610995565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610c355716918215610be55760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405190604082019282841067ffffffffffffffff8511176108535760008091610d0f95604052601e85527f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000602086015260208151910182855af13d15610d12573d91610cf283610869565b92610d006040519485610831565b83523d6000602085013e610d16565b90565b6060915b91929015610d785750815115610d2a575090565b3b15610d335790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610d8b5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610daf9060248301906107c0565b0390fdfea264697066735822122076648db9291c21bee8cfdf2c4884fedc5c89b4157a829b5031b5b232ed867eed64736f6c63430008130033",
    "sourceMap": "141:1153:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:1153:88;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:19;141:1153;;;;;;;;;;;;;;;;;;;;452:19;141:1153;;514:19;141:1153;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11271:17:175;;;141:1153:88;;;;;;;514:19;141:1153;;;;;;;;-1:-1:-1;141:1153:88;;;;;;-1:-1:-1;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:19;141:1153;;;;11271:17:175;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:19;141:1153;;;;;;;;;;;;452:19;141:1153;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:6:175;141:1153:88;;:::i;:::-;;;719:10:221;;3894:6:175;:::i;:::-;141:1153:88;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:221;;141:1153:88;;;;;;;;;;;;;;;;;;;;;6792:35:175;;;;141:1153:88;;;;6928:34:175;141:1153:88;;;;719:10:221;6928:34:175;:::i;141:1153:88:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;650:34;141:1153;;;;;;;;;;;;;;;650:34;:::i;:::-;141:1153;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:1153:88;;;;;;;;-1:-1:-1;;;;;141:1153:88;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:10:221;141:1153:88;;;;;;;;;;-1:-1:-1;;;;;141:1153:88;;;;;;;;;;;;;;;;;-1:-1:-1;141:1153:88;;;719:10:221;6021:38:175;719:10:221;;;6021:38:175;:::i;141:1153:88:-;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;3186:2:175;141:1153:88;;;;;;;;;;;;-1:-1:-1;;141:1153:88;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;719:10:221;141:1153:88;;;;;;11271:17:175;;;11251:37;;11247:243;;141:1153:88;;5424:6:175;;;;;;:::i;11247:243::-;11312:26;;;141:1153:88;;;;;;11439:25:175;141:1153:88;;;5424:6:175;141:1153:88;;719:10:221;11439:25:175;;:::i;:::-;11247:243;;;;;;;;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3342:12:175;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;4606:6:175;141:1153:88;;:::i;:::-;;;719:10:221;;4606:6:175;:::i;141:1153:88:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:1153:88;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;141:1153:88;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:1153:88;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;909:12;141:1153;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;909:12;-1:-1:-1;141:1153:88;;;-1:-1:-1;141:1153:88;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7456:788:175:-;-1:-1:-1;;;;;141:1153:88;;;;7552:18:175;;141:1153:88;;;;7630:16:175;;141:1153:88;;801:12;141:1153;;;;;;;;;;;801:27;797:136;;7456:788:175;7568:1;;141:1153:88;;;;;;;;;;;;;7801:21:175;;;141:1153:88;;;8163:26:175;141:1153:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:26:175;801:12:88;141:1153;;;;;;;;;;;;1155:26;1171:10;1155:26;1151:135;;7456:788:175;;;:::o;1151:135:88:-;650:34;141:1153;;;;;801:12;141:1153;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;650:34;:::i;:::-;;7456:788:175:o;141:1153:88:-;-1:-1:-1;;;141:1153:88;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;797:136;-1:-1:-1;;141:1153:88;;801:12;141:1153;;;650:34;;141:1153;;;;;;;:::i;650:34::-;;797:136;;;141:1153;;;;7568:1:175;141:1153:88;;;;;7568:1:175;141:1153:88;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;10464:340:175;-1:-1:-1;;;;;141:1153:88;;;;10565:19:175;;141:1153:88;;;10643:21:175;;;141:1153:88;;;10765:32:175;141:1153:88;;10582:1:175;141:1153:88;;;;;10582:1:175;141:1153:88;;10582:1:175;141:1153:88;;;;;10582:1:175;141:1153:88;;;;;;;10765:32:175;10464:340::o;141:1153:88:-;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:1153:88;;;;;;;3700:185:217;141:1153:88;;;;;;;;;;;;;;;;3842:1:217;141:1153:88;;5506:69:217;141:1153:88;;;;;;;;;;;;5458:31:217;;;;;;;;141:1153:88;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3842:1:217;141:1153:88;;;;5506:69:217;:::i;:::-;3700:185;:::o;141:1153:88:-;;;7630:628:217;;;;7834:418;;;141:1153:88;;;7865:22:217;7861:286;;8160:17;;:::o;7861:286::-;1702:19;:23;141:1153:88;;8160:17:217;:::o;141:1153:88:-;;;-1:-1:-1;;;141:1153:88;;;;;;;;;;;;;;;;;;;;7834:418:217;141:1153:88;;;;-1:-1:-1;8937:21:217;:17;;9109:142;;;;;;;8933:379;141:1153:88;;-1:-1:-1;;;9281:20:217;;141:1153:88;9281:20:217;;;141:1153:88;;;;;;;;;;;:::i;:::-;9281:20:217;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "functionCall(address,bytes)": "a0b5ffb0",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "scheduleReenter(uint8,address,bytes)": "cd594b63",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"functionCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ERC20Reentrant.Type\",\"name\":\"when\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"scheduleReenter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/openzeppelin/local/mocks/ERC20Reentrant.sol\":\"ERC20Reentrant\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/openzeppelin/local/interfaces/IERC4626.sol\":{\"keccak256\":\"0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3\",\"dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2\"]},\"contracts/.cache/openzeppelin/local/mocks/ERC20Reentrant.sol\":{\"keccak256\":\"0xc500091211144eac15ce30099e624c63baa6e352e312870be6bba16b0b5c8fd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a415c89ef5c2aa338393c37805423e28b2b2f50d45ce2342b8d74dfeced7353a\",\"dweb:/ipfs/QmVtBXVP4Z8oWkYJrrGrw9gX2xUCv9Ykomzyuc5BJcRUCo\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd37b27abb4589518b170e385d8650d5713b045f5d70844f4d1a8e37ee5d2c39a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4b2f7d6da227743afeb04a3ac32db66490004dbe5918e11cbcf9d73c8152187\",\"dweb:/ipfs/QmShqQdHjZswMHpuGtLqxLLixMM1tJwE3s8TFQxwsbKGCo\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xe72eb0926001ccf2feaacca9c3336e429a187d57bd86be7ad4e61c05ebec632a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01bc332863b200027d9d809f243c33c4598745457b3f1925a5e60e65f88ebe69\",\"dweb:/ipfs/QmTLxtaduDL6uqZ2sXAKqMxSHa8YuJhG6qbRbgsnsiktcQ\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x83a25eb2dc4303d6fb412f8a955a0970854c5bfde573249065806e2ebe26a944\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10cac0c3068d085bab77841ee334d61610b0d71c76752d22792505be9166fae9\",\"dweb:/ipfs/QmWG299WDCnP9iLjQYf91ki45DAktPS77G6gR6dr1janzc\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"contracts/.cache/openzeppelin/local/utils/Address.sol\":{\"keccak256\":\"0x277775f22320f32702fd59efea3ce2758a29ab81cf2493fa7ed56514c57e7444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fca7b7cf5c2f491133149ea6b44519030daf917867406935b25e6f6b2fb61ac\",\"dweb:/ipfs/QmZZHqpknhqvtBST1JNefHXPe4U7EzefQdySDsemf41qrn\"]},\"contracts/.cache/openzeppelin/local/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/.cache/openzeppelin/local/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "functionCall",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum ERC20Reentrant.Type",
              "name": "when",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleReenter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/openzeppelin/local/mocks/ERC20Reentrant.sol": "ERC20Reentrant"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/openzeppelin/local/interfaces/IERC4626.sol": {
        "keccak256": "0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c",
        "urls": [
          "bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3",
          "dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/mocks/ERC20Reentrant.sol": {
        "keccak256": "0xc500091211144eac15ce30099e624c63baa6e352e312870be6bba16b0b5c8fd7",
        "urls": [
          "bzz-raw://a415c89ef5c2aa338393c37805423e28b2b2f50d45ce2342b8d74dfeced7353a",
          "dweb:/ipfs/QmVtBXVP4Z8oWkYJrrGrw9gX2xUCv9Ykomzyuc5BJcRUCo"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/ERC20.sol": {
        "keccak256": "0xd37b27abb4589518b170e385d8650d5713b045f5d70844f4d1a8e37ee5d2c39a",
        "urls": [
          "bzz-raw://d4b2f7d6da227743afeb04a3ac32db66490004dbe5918e11cbcf9d73c8152187",
          "dweb:/ipfs/QmShqQdHjZswMHpuGtLqxLLixMM1tJwE3s8TFQxwsbKGCo"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xe72eb0926001ccf2feaacca9c3336e429a187d57bd86be7ad4e61c05ebec632a",
        "urls": [
          "bzz-raw://01bc332863b200027d9d809f243c33c4598745457b3f1925a5e60e65f88ebe69",
          "dweb:/ipfs/QmTLxtaduDL6uqZ2sXAKqMxSHa8YuJhG6qbRbgsnsiktcQ"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x83a25eb2dc4303d6fb412f8a955a0970854c5bfde573249065806e2ebe26a944",
        "urls": [
          "bzz-raw://10cac0c3068d085bab77841ee334d61610b0d71c76752d22792505be9166fae9",
          "dweb:/ipfs/QmWG299WDCnP9iLjQYf91ki45DAktPS77G6gR6dr1janzc"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/Address.sol": {
        "keccak256": "0x277775f22320f32702fd59efea3ce2758a29ab81cf2493fa7ed56514c57e7444",
        "urls": [
          "bzz-raw://4fca7b7cf5c2f491133149ea6b44519030daf917867406935b25e6f6b2fb61ac",
          "dweb:/ipfs/QmZZHqpknhqvtBST1JNefHXPe4U7EzefQdySDsemf41qrn"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/openzeppelin/local/mocks/ERC20Reentrant.sol",
    "id": 10935,
    "exportedSymbols": {
      "Address": [
        30545
      ],
      "Context": [
        32311
      ],
      "ERC20": [
        22900
      ],
      "ERC20Reentrant": [
        10934
      ],
      "ERC4626": [
        25428
      ],
      "IERC20": [
        22978
      ],
      "IERC20Metadata": [
        25453
      ],
      "IERC20Permit": [
        25489
      ],
      "IERC4626": [
        9755
      ],
      "Math": [
        36110
      ],
      "SafeERC20": [
        26036
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1263:88",
    "nodes": [
      {
        "id": 10807,
        "nodeType": "PragmaDirective",
        "src": "32:23:88",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 10808,
        "nodeType": "ImportDirective",
        "src": "57:34:88",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/token/ERC20/ERC20.sol",
        "file": "../token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10935,
        "sourceUnit": 22901,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10809,
        "nodeType": "ImportDirective",
        "src": "92:47:88",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/token/ERC20/extensions/ERC4626.sol",
        "file": "../token/ERC20/extensions/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10935,
        "sourceUnit": 25429,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10934,
        "nodeType": "ContractDefinition",
        "src": "141:1153:88",
        "nodes": [
          {
            "id": 10817,
            "nodeType": "EnumDefinition",
            "src": "195:59:88",
            "nodes": [],
            "canonicalName": "ERC20Reentrant.Type",
            "members": [
              {
                "id": 10814,
                "name": "No",
                "nameLocation": "215:2:88",
                "nodeType": "EnumValue",
                "src": "215:2:88"
              },
              {
                "id": 10815,
                "name": "Before",
                "nameLocation": "227:6:88",
                "nodeType": "EnumValue",
                "src": "227:6:88"
              },
              {
                "id": 10816,
                "name": "After",
                "nameLocation": "243:5:88",
                "nodeType": "EnumValue",
                "src": "243:5:88"
              }
            ],
            "name": "Type",
            "nameLocation": "200:4:88"
          },
          {
            "id": 10820,
            "nodeType": "VariableDeclaration",
            "src": "260:25:88",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_reenterType",
            "nameLocation": "273:12:88",
            "scope": 10934,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Type_$10817",
              "typeString": "enum ERC20Reentrant.Type"
            },
            "typeName": {
              "id": 10819,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10818,
                "name": "Type",
                "nameLocations": [
                  "260:4:88"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10817,
                "src": "260:4:88"
              },
              "referencedDeclaration": 10817,
              "src": "260:4:88",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Type_$10817",
                "typeString": "enum ERC20Reentrant.Type"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10822,
            "nodeType": "VariableDeclaration",
            "src": "291:30:88",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_reenterTarget",
            "nameLocation": "307:14:88",
            "scope": 10934,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10821,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "291:7:88",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10824,
            "nodeType": "VariableDeclaration",
            "src": "327:26:88",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_reenterData",
            "nameLocation": "341:12:88",
            "scope": 10934,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 10823,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "327:5:88",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10847,
            "nodeType": "FunctionDefinition",
            "src": "360:180:88",
            "nodes": [],
            "body": {
              "id": 10846,
              "nodeType": "Block",
              "src": "442:98:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 10836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10834,
                      "name": "_reenterType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10820,
                      "src": "452:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$10817",
                        "typeString": "enum ERC20Reentrant.Type"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10835,
                      "name": "when",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10827,
                      "src": "467:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$10817",
                        "typeString": "enum ERC20Reentrant.Type"
                      }
                    },
                    "src": "452:19:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$10817",
                      "typeString": "enum ERC20Reentrant.Type"
                    }
                  },
                  "id": 10837,
                  "nodeType": "ExpressionStatement",
                  "src": "452:19:88"
                },
                {
                  "expression": {
                    "id": 10840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10838,
                      "name": "_reenterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10822,
                      "src": "481:14:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10839,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10829,
                      "src": "498:6:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "481:23:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10841,
                  "nodeType": "ExpressionStatement",
                  "src": "481:23:88"
                },
                {
                  "expression": {
                    "id": 10844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10842,
                      "name": "_reenterData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10824,
                      "src": "514:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10843,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10831,
                      "src": "529:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "514:19:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 10845,
                  "nodeType": "ExpressionStatement",
                  "src": "514:19:88"
                }
              ]
            },
            "functionSelector": "cd594b63",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleReenter",
            "nameLocation": "369:15:88",
            "parameters": {
              "id": 10832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10827,
                  "mutability": "mutable",
                  "name": "when",
                  "nameLocation": "390:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10847,
                  "src": "385:9:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Type_$10817",
                    "typeString": "enum ERC20Reentrant.Type"
                  },
                  "typeName": {
                    "id": 10826,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10825,
                      "name": "Type",
                      "nameLocations": [
                        "385:4:88"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10817,
                      "src": "385:4:88"
                    },
                    "referencedDeclaration": 10817,
                    "src": "385:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$10817",
                      "typeString": "enum ERC20Reentrant.Type"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10829,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "404:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10847,
                  "src": "396:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10831,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "427:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10847,
                  "src": "412:19:88",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10830,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:48:88"
            },
            "returnParameters": {
              "id": 10833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:88"
            },
            "scope": 10934,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 10863,
            "nodeType": "FunctionDefinition",
            "src": "546:145:88",
            "nodes": [],
            "body": {
              "id": 10862,
              "nodeType": "Block",
              "src": "633:58:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10858,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10849,
                        "src": "671:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10859,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10851,
                        "src": "679:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10856,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30545,
                        "src": "650:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$30545_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 10857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "658:12:88",
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30285,
                      "src": "650:20:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 10860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:34:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 10855,
                  "id": 10861,
                  "nodeType": "Return",
                  "src": "643:41:88"
                }
              ]
            },
            "functionSelector": "a0b5ffb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "555:12:88",
            "parameters": {
              "id": 10852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10849,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "576:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10863,
                  "src": "568:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10851,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "597:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10863,
                  "src": "584:17:88",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10850,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "567:35:88"
            },
            "returnParameters": {
              "id": 10855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10863,
                  "src": "619:12:88",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10853,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:14:88"
            },
            "scope": 10934,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10898,
            "nodeType": "FunctionDefinition",
            "src": "697:296:88",
            "nodes": [],
            "body": {
              "id": 10897,
              "nodeType": "Block",
              "src": "787:206:88",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Type_$10817",
                      "typeString": "enum ERC20Reentrant.Type"
                    },
                    "id": 10876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10873,
                      "name": "_reenterType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10820,
                      "src": "801:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$10817",
                        "typeString": "enum ERC20Reentrant.Type"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10874,
                        "name": "Type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10817,
                        "src": "817:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Type_$10817_$",
                          "typeString": "type(enum ERC20Reentrant.Type)"
                        }
                      },
                      "id": 10875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "822:6:88",
                      "memberName": "Before",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10815,
                      "src": "817:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$10817",
                        "typeString": "enum ERC20Reentrant.Type"
                      }
                    },
                    "src": "801:27:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10888,
                  "nodeType": "IfStatement",
                  "src": "797:136:88",
                  "trueBody": {
                    "id": 10887,
                    "nodeType": "Block",
                    "src": "830:103:88",
                    "statements": [
                      {
                        "expression": {
                          "id": 10880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10877,
                            "name": "_reenterType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "844:12:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Type_$10817",
                              "typeString": "enum ERC20Reentrant.Type"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10878,
                              "name": "Type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10817,
                              "src": "859:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Type_$10817_$",
                                "typeString": "type(enum ERC20Reentrant.Type)"
                              }
                            },
                            "id": 10879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "864:2:88",
                            "memberName": "No",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10814,
                            "src": "859:7:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Type_$10817",
                              "typeString": "enum ERC20Reentrant.Type"
                            }
                          },
                          "src": "844:22:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Type_$10817",
                            "typeString": "enum ERC20Reentrant.Type"
                          }
                        },
                        "id": 10881,
                        "nodeType": "ExpressionStatement",
                        "src": "844:22:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10883,
                              "name": "_reenterTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10822,
                              "src": "893:14:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10884,
                              "name": "_reenterData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10824,
                              "src": "909:12:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "id": 10882,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10863,
                            "src": "880:12:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 10885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "880:42:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 10886,
                        "nodeType": "ExpressionStatement",
                        "src": "880:42:88"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10892,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10865,
                        "src": "969:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10893,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10867,
                        "src": "975:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10894,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10869,
                        "src": "979:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10889,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "942:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Reentrant_$10934_$",
                          "typeString": "type(contract super ERC20Reentrant)"
                        }
                      },
                      "id": 10891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "948:20:88",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22888,
                      "src": "942:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:44:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10896,
                  "nodeType": "ExpressionStatement",
                  "src": "942:44:88"
                }
              ]
            },
            "baseFunctions": [
              22888
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "706:20:88",
            "overrides": {
              "id": 10871,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "778:8:88"
            },
            "parameters": {
              "id": 10870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10865,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "735:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10898,
                  "src": "727:12:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10867,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "749:2:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10898,
                  "src": "741:10:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10869,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "761:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10898,
                  "src": "753:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:42:88"
            },
            "returnParameters": {
              "id": 10872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "787:0:88"
            },
            "scope": 10934,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10933,
            "nodeType": "FunctionDefinition",
            "src": "999:293:88",
            "nodes": [],
            "body": {
              "id": 10932,
              "nodeType": "Block",
              "src": "1088:204:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10911,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10900,
                        "src": "1124:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10912,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10902,
                        "src": "1130:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10913,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10904,
                        "src": "1134:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10908,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1098:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20Reentrant_$10934_$",
                          "typeString": "type(contract super ERC20Reentrant)"
                        }
                      },
                      "id": 10910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1104:19:88",
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22899,
                      "src": "1098:25:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:43:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10915,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:43:88"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Type_$10817",
                      "typeString": "enum ERC20Reentrant.Type"
                    },
                    "id": 10919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10916,
                      "name": "_reenterType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10820,
                      "src": "1155:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$10817",
                        "typeString": "enum ERC20Reentrant.Type"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10917,
                        "name": "Type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10817,
                        "src": "1171:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Type_$10817_$",
                          "typeString": "type(enum ERC20Reentrant.Type)"
                        }
                      },
                      "id": 10918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1176:5:88",
                      "memberName": "After",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10816,
                      "src": "1171:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$10817",
                        "typeString": "enum ERC20Reentrant.Type"
                      }
                    },
                    "src": "1155:26:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10931,
                  "nodeType": "IfStatement",
                  "src": "1151:135:88",
                  "trueBody": {
                    "id": 10930,
                    "nodeType": "Block",
                    "src": "1183:103:88",
                    "statements": [
                      {
                        "expression": {
                          "id": 10923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10920,
                            "name": "_reenterType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "1197:12:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Type_$10817",
                              "typeString": "enum ERC20Reentrant.Type"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10921,
                              "name": "Type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10817,
                              "src": "1212:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Type_$10817_$",
                                "typeString": "type(enum ERC20Reentrant.Type)"
                              }
                            },
                            "id": 10922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1217:2:88",
                            "memberName": "No",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10814,
                            "src": "1212:7:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Type_$10817",
                              "typeString": "enum ERC20Reentrant.Type"
                            }
                          },
                          "src": "1197:22:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Type_$10817",
                            "typeString": "enum ERC20Reentrant.Type"
                          }
                        },
                        "id": 10924,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:22:88"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10926,
                              "name": "_reenterTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10822,
                              "src": "1246:14:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10927,
                              "name": "_reenterData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10824,
                              "src": "1262:12:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "id": 10925,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10863,
                            "src": "1233:12:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 10928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1233:42:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 10929,
                        "nodeType": "ExpressionStatement",
                        "src": "1233:42:88"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              22899
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "1008:19:88",
            "overrides": {
              "id": 10906,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1079:8:88"
            },
            "parameters": {
              "id": 10905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10900,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1036:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10933,
                  "src": "1028:12:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10902,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1050:2:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10933,
                  "src": "1042:10:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10904,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1062:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 10933,
                  "src": "1054:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:42:88"
            },
            "returnParameters": {
              "id": 10907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:0:88"
            },
            "scope": 10934,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "54455354",
                "id": 10811,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "174:6:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                  "typeString": "literal_string \"TEST\""
                },
                "value": "TEST"
              },
              {
                "hexValue": "545354",
                "id": 10812,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "182:5:88",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                  "typeString": "literal_string \"TST\""
                },
                "value": "TST"
              }
            ],
            "baseName": {
              "id": 10810,
              "name": "ERC20",
              "nameLocations": [
                "168:5:88"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22900,
              "src": "168:5:88"
            },
            "id": 10813,
            "nodeType": "InheritanceSpecifier",
            "src": "168:20:88"
          }
        ],
        "canonicalName": "ERC20Reentrant",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10934,
          22900,
          25453,
          22978,
          32311
        ],
        "name": "ERC20Reentrant",
        "nameLocation": "150:14:88",
        "scope": 10935,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 88
}