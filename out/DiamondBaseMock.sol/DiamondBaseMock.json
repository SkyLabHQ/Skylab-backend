{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondWritableInternal.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondWritableInternal.FacetCut[]",
          "name": "cuts",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__InvalidInitializationParameters",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__RemoveTargetNotZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__ReplaceTargetIsIdentical",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorAlreadyAdded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorIsImmutable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__SelectorNotSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondWritable__TargetHasNoCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Proxy__ImplementationIsNotContract",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondWritableInternal.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamondWritableInternal.FacetCut[]",
          "name": "facetCuts",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": {
    "object": "0x6040608081523461016c57610ba2908138038061001b816101ca565b938439820191602092838282031261016c5781516001600160401b039283821161016c57019080601f8301121561016c57815161005f61005a826101ef565b6101ca565b938685838152019187600591821b8601019484861161016c57888101935b86851061009a578861008e89610206565b5160a89081610a9a8239f35b845184811161016c5782019060609182601f19828a03011261016c576100be610187565b818d01519093906001600160a01b038116810361016c5784528b820151600381101561016c578d8501528101519086821161016c57019187603f8401121561016c578b808401518c61011261005a836101ef565b92838381520191881b8601018a811161016c578d8f9601905b808210610145575050508b8201528152948101940161007d565b8151965090916001600160e01b03198716870361016c578f8181988293520192019061012b565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190606082016001600160401b038111838210176101a657604052565b610171565b60405190602082016001600160401b038111838210176101a657604052565b6040519190601f01601f191682016001600160401b038111838210176101a657604052565b6001600160401b0381116101a65760051b60200190565b9061020f6101ab565b9160008352610238610231600080516020610b428339815191525461ffff1690565b61ffff1690565b908192600094600784166103b1575b6000935b835185101561030a5761025e85856103de565b5190602082015161026e81610408565b60408084015151156102fa575061028481610408565b806102a257509060019761029792610552565b9690945b019361024b565b6102af8197939297610408565b600181036102c95750906102c4600192610975565b61029b565b806102d5600292610408565b146102e4575b5060019061029b565b6001976102f192966106f0565b969094906102db565b5163eb6c3aeb60e01b8152600490fd5b819450957f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6739391929661036096810361038e575b60078116610362575b505061035860405192839283610468565b0390a1610a7c565b565b6103869060031c600052600080516020610b82833981519152602052604060002090565b553880610347565b600080516020610b42833981519152805461ffff191661ffff831617905561033e565b94506103d78360031c600052600080516020610b82833981519152602052604060002090565b5494610247565b80518210156103f25760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6003111561041257565b634e487b7160e01b600052602160045260246000fd5b919082519283825260005b848110610454575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610433565b919091606092838201848352815180915260809485840191868160051b860101966020809501936000915b8383106104bc575050505050509060006104b99493928201526040818403910152610428565b90565b909192939498607f198882030183528951908681019060018060a01b0383511681528883015160038110156104125784828b9594939286809401528a604080960151958201528451809452019201906000905b80821061052e5750505090806001929b01930193019194939290610493565b82516001600160e01b03191684528a9493840193909201916001919091019061050f565b82519091906001600160a01b03166001600160a01b03811630141590816106e6575b506106d45760009384925b60408086015180518610156106c85761059b866105a9926103de565b516001600160e01b03191690565b906105fd6105f16105eb6105dd8563ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b546001600160601b03191690565b60601c90565b6001600160a01b031690565b6106b85750855182906001600160601b03199061062e906001600160a01b03165b60601b6001600160601b03191690565b161761065a8263ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b5560e090818360051b169463ffffffff60e01b809216861c91861c191617931461068b575b6001938401930161057f565b916106b08360031c600052600080516020610b82833981519152602052604060002090565b55849161067f565b51634923a77160e11b8152600490fd5b50509250925092509190565b604051633ddc5cab60e21b8152600490fd5b3b15905038610574565b82519293929091906001600160a01b03166109635790600780821691600390600090821c5b6040958689015180518410156109545761059b84610732926103de565b9561075d8763ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b54978860601c8015610943573014610933575081610921575050600019019061079d82600052600080516020610b82833981519152602052604060002090565b5494849687915b60e063ffffffff811b9260006107ec858c600598891b1b169486811686036108a25763ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b5580881c611fff16941b1691858414610890579061084d929161082685600052600080516020610b82833981519152602052604060002090565b5491831c921c19161791600052600080516020610b82833981519152602052604060002090565b555b8515610862575b60010190949394610715565b9350600061088782600052600080516020610b82833981519152602052604060002090565b55600093610856565b9180949893501c921c1916179361084f565b6108df6108d26105dd8863ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b6001600160601b03191690565b6001600160e01b03198781166000908152600080516020610b6283398151915260205260408082206001600160601b0389169490941790935592168252902090565b600019019690959192918791906107a4565b5163e983573160e01b8152600490fd5b81516337e25a9760e11b8152600490fd5b5097509394505090501b179190565b604051633ab3490960e21b8152600490fd5b80516001600160a01b03163b156106d45760005b6040808301518051831015610a765761059b836109a5926103de565b906109d08263ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b54908160601c801561094357308114610a655785516109f7906001600160a01b03166105f1565b14610a55575083516001939291610a4e91610a1e906108d2906001600160a01b031661061e565b90858060601b0316179163ffffffff60e01b16600052600080516020610b62833981519152602052604060002090565b5501610989565b516330baabf360e11b8152600490fd5b815163e983573160e01b8152600490fd5b50505050565b5115600103610a8757565b6040516326df4ccd60e01b8152600490fdfe6080604052600063ffffffff60e01b81351681527f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93602052604081205460601c803b15606157818091368280378136915af43d82803e15605d573d90f35b3d90fd5b6321f27f0d60e21b60805260046080fdfea26469706673582212208308c5996fbcb2e696423d2851361845ab42c259de255ab948abd862432b445364736f6c63430008130033177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc95",
    "sourceMap": "187:159:303:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;187:159:303;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;187:159:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;187:159:303;;;;;;;;;;;;;;;;;-1:-1:-1;187:159:303;;-1:-1:-1;;;;;;187:159:303;;;;;;;;;;;;;;;;;;;;-1:-1:-1;187:159:303;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;187:159:303;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;187:159:303;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;187:159:303;;;-1:-1:-1;;;;;187:159:303;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;187:159:303;;;;;;;;;:::o;258:86::-;;187:159;;:::i;:::-;;330:1;187:159;;1039:47:313;187:159:303;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;;;;1039:47:313;1100:45;;1159:20;330:1:303;1253:17:313;1269:1;1253:17;;1249:151;;258:86:303;330:1;1414:797:313;1452:3;187:159:303;;1430:20:313;;;;;1502:12;;;;:::i;:::-;;1556:15;187:159:303;1556:15:313;;187:159:303;;;;:::i;:::-;1594:18:313;;;;;187:159:303;1594:30:313;1590:123;;187:159:303;;;;:::i;:::-;1735:28:313;;;1819:60;;1071:15;1819:60;;;;:::i;:::-;1787:92;;1731:466;;187:159:303;1419:9:313;;;1731:466;187:159:303;;;;;;;:::i;:::-;1071:15:313;1908:32;;1071:15;;1990:8;;;1071:15;1990:8;;:::i;:::-;1731:466;;1904:293;187:159:303;;2038:21:313;187:159:303;;:::i;:::-;2028:31:313;2024:173;;1904:293;;1071:15;1904:293;1731:466;;2024:173;1071:15;2115:63;;;;;:::i;:::-;2083:95;;2024:173;;;;1590:123;187:159:303;-1:-1:-1;;;1655:39:313;;;;;1430:20;;;;;2533:35;1430:20;;;;2602:4;1430:20;2229:38;;2225:116;;1414:797;1269:1;2408:17;;2404:110;;1414:797;187:159:303;;2533:35:313;1594:18;187:159:303;2533:35:313;;;;;:::i;:::-;;;;2602:4;:::i;:::-;258:86:303:o;2404:110:313:-;2449:35;187:159:303;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;2449:35:313;187:159:303;2404:110:313;;;;2225:116;-1:-1:-1;;;;;;;;;;;187:159:303;;-1:-1:-1;;187:159:303;;;;;;;2225:116:313;;1249:151;187:159:303;;1350:35:313;187:159:303;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;1350:35:313;187:159:303;1249:151:313;;;187:159:303;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;187:159:303;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;187:159:303;;;;;;;;;-1:-1:-1;187:159:303;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;187:159:303;;;;;;;;;;;;;;;;;;;;;2630:1517:313;187:159:303;;2630:1517:313;;;-1:-1:-1;;;;;187:159:303;-1:-1:-1;;;;;187:159:303;;2905:4:313;2878:32;;;;:65;;2630:1517;2874:145;;;187:159:303;3038:9:313;;3033:1047;3080:3;3053:18;;;;;187:159:303;;3049:29:313;;;;;3121:21;;;;;:::i;:::-;187:159:303;-1:-1:-1;;;;;;187:159:303;;;3121:21:313;3179:18;3220:40;:26;3228:17;3179:18;;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;3179:18:313;187:159:303;-1:-1:-1;;;;;;187:159:303;;;3228:17:313;187:159:303;;;;3220:26:313;-1:-1:-1;;;;;187:159:303;;;3220:40:313;3216:133;;-1:-1:-1;187:159:303;;;;-1:-1:-1;;;;;;187:159:303;3430:24:313;;-1:-1:-1;;;;;187:159:303;;;;-1:-1:-1;;;;;;187:159:303;;;3430:24:313;187:159:303;3430:49:313;3409:18;;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;3409:18:313;187:159:303;;;;;;;;;;;;;;;;;;;;3672:48:313;3657:63;3656:133;3872:29;;3868:164;;3080:3;187:159:303;;;;;;3038:9:313;;3868:164;187:159:303;3925:35:313;187:159:303;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;3925:35:313;187:159:303;3997:16:313;;3868:164;;3216:133;187:159:303;-1:-1:-1;;;3291:39:313;;;;;3049:29;;;;;;;;;4094:36;2630:1517;:::o;2874:145::-;187:159:303;;-1:-1:-1;;;2970:34:313;;;;;2878:65;535:61:461;612:8;;-1:-1:-1;2878:65:313;;;4153:3414;187:159:303;;;;4153:3414:313;;;;-1:-1:-1;;;;;187:159:303;4400:120:313;;187:159:303;4640:1:313;4624:17;;;;187:159:303;;;;;;4703:3:313;4676:18;;;;;;187:159:303;;4672:29:313;;;;;4744:21;;;;;:::i;:::-;4802:18;;;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;4802:18:313;187:159:303;;;;;4843:40:313;;4839:129;;5028:4;4990:43;4986:135;;-1:-1:-1;5143:17:313;;;187:159:303;;;;;5240:34:313;;;187:159:303;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;5240:34:313;187:159:303;5296:23:313;;5139:267;;;;187:159:303;;;;;;6075:18:313;187:159:303;;;;;;;;;;;;5814:24:313;;5810:236;;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;6075:18:313;420:44;187:159:303;;;;;;;;;6352:42:313;;;;;6444:38;6857;6444;;;;187:159:303;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;6444:38:313;187:159:303;;;;;;6642:51:313;6624:69;6623:150;6857:38;187:159:303;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;6857:38:313;187:159:303;6348:893:313;7263:24;;7259:150;;6348:893;187:159:303;;4661:9:313;;;;;;7259:150;7318:34;;187:159:303;7318:34:313;;187:159:303;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;7318:34:313;420:44;187:159:303;;7259:150:313;;6348:893;187:159:303;;;;;;;;;7091:51:313;7076:66;7075:147;6348:893;;;5810:236;5958:65;5992:31;6000:22;;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;5992:31:313;-1:-1:-1;;;;;;187:159:303;;;5958:65:313;-1:-1:-1;;;;;;187:159:303;;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;-1:-1:-1;;;;;5959:29:313;;5958:65;;;;187:159:303;;;;;;;;;;;5139:267:313;-1:-1:-1;;187:159:303;;;;;;;;;5139:267:313;;;4986:135;187:159:303;-1:-1:-1;;;5064:38:313;;;;;4839:129;187:159:303;;-1:-1:-1;;;4914:35:313;;;;;4672:29;;;;;;;;;;187:159:303;7453:46:313;7514:36;4153:3414;:::o;4400:120::-;187:159:303;;-1:-1:-1;;;4460:45:313;;;;;7573:1094;187:159:303;;-1:-1:-1;;;;;187:159:303;535:61:461;612:8;7711:109:313;;7716:15;7881:3;7854:18;;;;;187:159:303;;7850:29:313;;;;;7922:21;;;;;:::i;:::-;7980:18;;;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;7980:18:313;187:159:303;;;;;8091:29:313;;8087:118;;8253:4;8226:32;;8222:124;;187:159:303;;8367:34:313;;-1:-1:-1;;;;;187:159:303;;;8367:34:313;;8363:131;;-1:-1:-1;187:159:303;;;;;;8557:18:313;;8578:58;;8612:24;;-1:-1:-1;;;;;187:159:303;;;8578:58:313;187:159:303;;;;;;8579:29:313;8578:58;8557:18;187:159:303;;;;;;-1:-1:-1;;;;;;;;;;;187:159:303;;;;;;;8557:18:313;187:159:303;;7839:9:313;;8363:131;187:159:303;-1:-1:-1;;;8432:43:313;;;;;8222:124;187:159:303;;-1:-1:-1;;;8289:38:313;;;;;7850:29;;;;;7573:1094::o;8673:694::-;187:159:303;8778:16:313;8752:20;8751:44;8747:132;;8673:694::o;8747:132::-;187:159:303;;-1:-1:-1;;;8818:50:313;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600063ffffffff60e01b81351681527f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93602052604081205460601c803b15606157818091368280378136915af43d82803e15605d573d90f35b3d90fd5b6321f27f0d60e21b60805260046080fdfea26469706673582212208308c5996fbcb2e696423d2851361845ab42c259de255ab948abd862432b445364736f6c63430008130033",
    "sourceMap": "187:159:303:-:0;;;-1:-1:-1;778:7:302;;;;;;576:53:304;;;;;187:159:303;576:53:304;;;;;535:61:461;;612:8;634:102:297;;746:335;;;;;;;;;;;;;;;;;;;;;;;;;;634:102;689:36;;;187:159:303;689:36:297;;187:159:303;689:36:297",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"cuts\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseMock.sol\":\"DiamondBaseMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/solidstate/local/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"contracts/.cache/solidstate/local/proxy/Proxy.sol\":{\"keccak256\":\"0x4d1e2891667e4e40f4c2c0279e905d6214eed2089762318c7a18897615ade0ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33dc0fb90fc0b5e83783b63f8a4f1689c034d8c02f2d17ed121737ed7a350c14\",\"dweb:/ipfs/QmZFMYq8e8QVsZwCD8zdh2ZKnpGEHc7SSoq8KdNddJBtJX\"]},\"contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0xe39674d3617adf69abfb96a74e55fa2db209a0eb083c6e320911268bb0703fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f228f586e08361365fa53dbf33b856735f19996c1437fd6f6132bab8783135e\",\"dweb:/ipfs/QmNk29QVnBo8CUX9FNdwuGvnnuwPhbznrMak5reom6ESN3\"]},\"contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseMock.sol\":{\"keccak256\":\"0x6659fb3eaca60e445da473a21eeef9b64f3ddd02e50ea8066deabac07716e1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbf40aa9ca9a271076f981d1ea5cf4a0f9813f96a4abe1d42b4d61a0b38d672\",\"dweb:/ipfs/QmZ8TKJQoFNVSka6aaDktCgCAFmLCsYmijsoYRm9sW2nWX\"]},\"contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0xe355178ce344f7d677a1fe8c94f2560c0b4e6be8ad1a449e856ac3ebf2a12900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2851ed84710be19eb0aad34b41214a380c9fdf18f5fabc11166760e39c78f977\",\"dweb:/ipfs/Qmb1of29KymSq1Keow3CLFApXGfRgJ2Z9LxhMbbMzrc4U8\"]},\"contracts/.cache/solidstate/local/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x4f2251f05cbc21623151527259ca336628e8f260b542cf6cba610a5c86b7dfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4daf7ceadd8ed4ca6a6fdad63e9c0ed618691b908e2d7cb43a6ce9a455d49466\",\"dweb:/ipfs/QmXbTUG5DQN5hf77zmobTbugQdGyvAyfDy5gBLNrXi1i1c\"]},\"contracts/.cache/solidstate/local/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0x31068c54fbe1196c7badf665729b8349eeb337fdf681cfdab14e43caecae5974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e365f7b1fbbf1fca2d70a0b2fc5c47eb516c54bf2822c5f0a2b97c212177ea72\",\"dweb:/ipfs/QmaV4gmdkaaTdNWszPc1MqycphktYSrWMEmZtEET8PZ4u1\"]},\"contracts/.cache/solidstate/local/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]},\"contracts/.cache/solidstate/local/utils/AddressUtils.sol\":{\"keccak256\":\"0x2e73aa25851f4a2d9dabf638088bd488eee4d2aef007936c2cfd041e404f8c4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184478851fbb151471a83dec76e74cf01099e714f1ad9a123f2857cdaf02bd0e\",\"dweb:/ipfs/QmT8duP3XrMaaURrgbow9y9udmEFWio2o6U58yxY3NsyoF\"]},\"contracts/.cache/solidstate/local/utils/UintUtils.sol\":{\"keccak256\":\"0x704c10b8b23713ae4b368c4fd2af5f9946f97b8b84913ee9e560bf9d70ef4a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9903c784bdff9fbff0e69bbd1239fae04dc5b7592ef6810a4e7454b8f079ced2\",\"dweb:/ipfs/QmYXbidoUoK9S2Mc64WyUtG4vny9zvECaGK52z5kTr2boB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IDiamondWritableInternal.FacetCut[]",
              "name": "cuts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondWritableInternal.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__InvalidInitializationParameters"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__RemoveTargetNotZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__ReplaceTargetIsIdentical"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorAlreadyAdded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorIsImmutable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorNotFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__SelectorNotSpecified"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondWritable__TargetHasNoCode"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Proxy__ImplementationIsNotContract"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamondWritableInternal.FacetCut[]",
              "name": "facetCuts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondWritableInternal.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseMock.sol": "DiamondBaseMock"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/solidstate/local/proxy/IProxy.sol": {
        "keccak256": "0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4",
        "urls": [
          "bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b",
          "dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/Proxy.sol": {
        "keccak256": "0x4d1e2891667e4e40f4c2c0279e905d6214eed2089762318c7a18897615ade0ec",
        "urls": [
          "bzz-raw://33dc0fb90fc0b5e83783b63f8a4f1689c034d8c02f2d17ed121737ed7a350c14",
          "dweb:/ipfs/QmZFMYq8e8QVsZwCD8zdh2ZKnpGEHc7SSoq8KdNddJBtJX"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBase.sol": {
        "keccak256": "0xe39674d3617adf69abfb96a74e55fa2db209a0eb083c6e320911268bb0703fe8",
        "urls": [
          "bzz-raw://5f228f586e08361365fa53dbf33b856735f19996c1437fd6f6132bab8783135e",
          "dweb:/ipfs/QmNk29QVnBo8CUX9FNdwuGvnnuwPhbznrMak5reom6ESN3"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseMock.sol": {
        "keccak256": "0x6659fb3eaca60e445da473a21eeef9b64f3ddd02e50ea8066deabac07716e1e3",
        "urls": [
          "bzz-raw://cfbf40aa9ca9a271076f981d1ea5cf4a0f9813f96a4abe1d42b4d61a0b38d672",
          "dweb:/ipfs/QmZ8TKJQoFNVSka6aaDktCgCAFmLCsYmijsoYRm9sW2nWX"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseStorage.sol": {
        "keccak256": "0xe355178ce344f7d677a1fe8c94f2560c0b4e6be8ad1a449e856ac3ebf2a12900",
        "urls": [
          "bzz-raw://2851ed84710be19eb0aad34b41214a380c9fdf18f5fabc11166760e39c78f977",
          "dweb:/ipfs/Qmb1of29KymSq1Keow3CLFApXGfRgJ2Z9LxhMbbMzrc4U8"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/diamond/base/IDiamondBase.sol": {
        "keccak256": "0x4f2251f05cbc21623151527259ca336628e8f260b542cf6cba610a5c86b7dfff",
        "urls": [
          "bzz-raw://4daf7ceadd8ed4ca6a6fdad63e9c0ed618691b908e2d7cb43a6ce9a455d49466",
          "dweb:/ipfs/QmXbTUG5DQN5hf77zmobTbugQdGyvAyfDy5gBLNrXi1i1c"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/diamond/writable/DiamondWritableInternal.sol": {
        "keccak256": "0x31068c54fbe1196c7badf665729b8349eeb337fdf681cfdab14e43caecae5974",
        "urls": [
          "bzz-raw://e365f7b1fbbf1fca2d70a0b2fc5c47eb516c54bf2822c5f0a2b97c212177ea72",
          "dweb:/ipfs/QmaV4gmdkaaTdNWszPc1MqycphktYSrWMEmZtEET8PZ4u1"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/proxy/diamond/writable/IDiamondWritableInternal.sol": {
        "keccak256": "0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605",
        "urls": [
          "bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740",
          "dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/utils/AddressUtils.sol": {
        "keccak256": "0x2e73aa25851f4a2d9dabf638088bd488eee4d2aef007936c2cfd041e404f8c4c",
        "urls": [
          "bzz-raw://184478851fbb151471a83dec76e74cf01099e714f1ad9a123f2857cdaf02bd0e",
          "dweb:/ipfs/QmT8duP3XrMaaURrgbow9y9udmEFWio2o6U58yxY3NsyoF"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/utils/UintUtils.sol": {
        "keccak256": "0x704c10b8b23713ae4b368c4fd2af5f9946f97b8b84913ee9e560bf9d70ef4a3c",
        "urls": [
          "bzz-raw://9903c784bdff9fbff0e69bbd1239fae04dc5b7592ef6810a4e7454b8f079ced2",
          "dweb:/ipfs/QmYXbidoUoK9S2Mc64WyUtG4vny9zvECaGK52z5kTr2boB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBaseMock.sol",
    "id": 46631,
    "exportedSymbols": {
      "DiamondBase": [
        46602
      ],
      "DiamondBaseMock": [
        46630
      ],
      "DiamondWritableInternal": [
        48293
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:314:303",
    "nodes": [
      {
        "id": 46604,
        "nodeType": "PragmaDirective",
        "src": "33:23:303",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 46606,
        "nodeType": "ImportDirective",
        "src": "58:80:303",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/proxy/diamond/writable/DiamondWritableInternal.sol",
        "file": "../writable/DiamondWritableInternal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46631,
        "sourceUnit": 48294,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46605,
              "name": "DiamondWritableInternal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48293,
              "src": "66:23:303",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46608,
        "nodeType": "ImportDirective",
        "src": "139:46:303",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/proxy/diamond/base/DiamondBase.sol",
        "file": "./DiamondBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46631,
        "sourceUnit": 46603,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46607,
              "name": "DiamondBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46602,
              "src": "147:11:303",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46630,
        "nodeType": "ContractDefinition",
        "src": "187:159:303",
        "nodes": [
          {
            "id": 46629,
            "nodeType": "FunctionDefinition",
            "src": "258:86:303",
            "nodes": [],
            "body": {
              "id": 46628,
              "nodeType": "Block",
              "src": "294:50:303",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46620,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46616,
                        "src": "316:4:303",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$48403_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 46623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "330:1:303",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 46622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "322:7:303",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "322:7:303",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "322:10:303",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 46625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "334:2:303",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$48403_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 46619,
                      "name": "_diamondCut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47680,
                      "src": "304:11:303",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$48403_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondWritableInternal.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 46626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "304:33:303",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46627,
                  "nodeType": "ExpressionStatement",
                  "src": "304:33:303"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46616,
                  "mutability": "mutable",
                  "name": "cuts",
                  "nameLocation": "288:4:303",
                  "nodeType": "VariableDeclaration",
                  "scope": 46629,
                  "src": "270:22:303",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$48403_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IDiamondWritableInternal.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46614,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46613,
                        "name": "FacetCut",
                        "nameLocations": [
                          "270:8:303"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 48403,
                        "src": "270:8:303"
                      },
                      "referencedDeclaration": 48403,
                      "src": "270:8:303",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$48403_storage_ptr",
                        "typeString": "struct IDiamondWritableInternal.FacetCut"
                      }
                    },
                    "id": 46615,
                    "nodeType": "ArrayTypeName",
                    "src": "270:10:303",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$48403_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamondWritableInternal.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "269:24:303"
            },
            "returnParameters": {
              "id": 46618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:0:303"
            },
            "scope": 46630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46609,
              "name": "DiamondBase",
              "nameLocations": [
                "215:11:303"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46602,
              "src": "215:11:303"
            },
            "id": 46610,
            "nodeType": "InheritanceSpecifier",
            "src": "215:11:303"
          },
          {
            "baseName": {
              "id": 46611,
              "name": "DiamondWritableInternal",
              "nameLocations": [
                "228:23:303"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48293,
              "src": "228:23:303"
            },
            "id": 46612,
            "nodeType": "InheritanceSpecifier",
            "src": "228:23:303"
          }
        ],
        "canonicalName": "DiamondBaseMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46630,
          48293,
          48404,
          46602,
          46203,
          46671,
          46164
        ],
        "name": "DiamondBaseMock",
        "nameLocation": "196:15:303",
        "scope": 46631,
        "usedErrors": [
          46160,
          48380,
          48382,
          48384,
          48386,
          48388,
          48390,
          48392,
          48394
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 303
}