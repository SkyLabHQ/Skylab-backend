{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e03461011357601f6106b738819003918201601f19168301916001600160401b0383118484101761011857808492606094604052833981010312610113578051906001600160a01b039081831683036101135760208101519182168203610113576040015191428311156100b35760805260a05260c052604051610588908161012f82396080518181816064015261012d015260a05181818161017d0152610417015260c05181818160ae015260e60152f35b60405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826338af3eed146104035750816386d1a69f146100d157508063b91d4001146100975763fc0c546a1461005157600080fd5b34610093578160031936011261009357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5034610093578160031936011261009357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b919050346103ff57826003193601126103ff577f000000000000000000000000000000000000000000000000000000000000000042106103a15780516370a0823160e01b815230838201526024916020916001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821684828781845afa918215610397578892610364575b508115610316578351918583019363a9059cbb60e01b85527f00000000000000000000000000000000000000000000000000000000000000001687840152604483015260448252608082019267ffffffffffffffff92808510848611176103045760c08101858110858211176102f25786528685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a082015251899182919082855af1903d156102e3573d9283116102d1579061024193929185519261023488601f19601f8401160185610446565b83523d8a8885013e61047e565b80518381159182156102ad575b505090501561025b578480f35b5162461bcd60e51b815292830152602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b83809293500103126102cd5782015180151581036102cd5780833861024e565b8580fd5b634e487b7160e01b8952604188528689fd5b9061024193925060609161047e565b634e487b7160e01b8b5260418a52888bfd5b634e487b7160e01b8a5260418952878afd5b835162461bcd60e51b81528088018690526023818801527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608490fd5b9091508481813d8311610390575b61037c8183610446565b8101031261038c57519038610163565b8780fd5b503d610372565b84513d8a823e3d90fd5b906020608492519162461bcd60e51b8352820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b6064820152fd5b8280fd5b8490346100935781600319360112610093577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761046857604052565b634e487b7160e01b600052604160045260246000fd5b919290156104e05750815115610492575090565b3b1561049b5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156104f35750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610539575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061051656fea26469706673582212202fa99146c668dcc55f198a61cc1ada4a3699ec04a5b33b617115b232bdda047d64736f6c63430008130033",
    "sourceMap": "393:1925:152:-:0;;;;;;;;;;;;;-1:-1:-1;;393:1925:152;;;;-1:-1:-1;;;;;393:1925:152;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;393:1925:152;;;;;;;;;;;;;;;;;;;;;;1099:15;;1084:30;;393:1925;;;1179:15;;393:1925;1204:27;1241;;393:1925;;;;;;;;1179:15;393:1925;;;;;;;;;;;;;;;;;;;;;1241:27;393:1925;;;;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;-1:-1:-1;393:1925:152;;;;;;-1:-1:-1;393:1925:152;;;;;-1:-1:-1;393:1925:152",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826338af3eed146104035750816386d1a69f146100d157508063b91d4001146100975763fc0c546a1461005157600080fd5b34610093578160031936011261009357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5034610093578160031936011261009357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b919050346103ff57826003193601126103ff577f000000000000000000000000000000000000000000000000000000000000000042106103a15780516370a0823160e01b815230838201526024916020916001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821684828781845afa918215610397578892610364575b508115610316578351918583019363a9059cbb60e01b85527f00000000000000000000000000000000000000000000000000000000000000001687840152604483015260448252608082019267ffffffffffffffff92808510848611176103045760c08101858110858211176102f25786528685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a082015251899182919082855af1903d156102e3573d9283116102d1579061024193929185519261023488601f19601f8401160185610446565b83523d8a8885013e61047e565b80518381159182156102ad575b505090501561025b578480f35b5162461bcd60e51b815292830152602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b83809293500103126102cd5782015180151581036102cd5780833861024e565b8580fd5b634e487b7160e01b8952604188528689fd5b9061024193925060609161047e565b634e487b7160e01b8b5260418a52888bfd5b634e487b7160e01b8a5260418952878afd5b835162461bcd60e51b81528088018690526023818801527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608490fd5b9091508481813d8311610390575b61037c8183610446565b8101031261038c57519038610163565b8780fd5b503d610372565b84513d8a823e3d90fd5b906020608492519162461bcd60e51b8352820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b6064820152fd5b8280fd5b8490346100935781600319360112610093577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761046857604052565b634e487b7160e01b600052604160045260246000fd5b919290156104e05750815115610492575090565b3b1561049b5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156104f35750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610539575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061051656fea26469706673582212202fa99146c668dcc55f198a61cc1ada4a3699ec04a5b33b617115b232bdda047d64736f6c63430008130033",
    "sourceMap": "393:1925:152:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:6;-1:-1:-1;;;;;393:1925:152;;;;;;;;;;;;;;;;;;;;;;;;;;1817:12;393:1925;;;;;;;;;;;;;;;;;;1817:12;2040:15;:32;393:1925;;;;-1:-1:-1;;;2155:32:152;;2181:4;2155:32;;;393:1925;;;2155:32;;-1:-1:-1;;;;;393:1925:152;1410:6;393:1925;;2155:32;393:1925;;;;2155:32;;;;;;;;;;;393:1925;2205:10;;;393:1925;;;;1050:58:151;;;;393:1925:152;;;;1050:58:151;;1589:12:152;393:1925;1050:58:151;;;393:1925:152;;;;;;1050:58:151;;393:1925:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5458:31:175;393:1925:152;;;;5458:31:175;393:1925:152;5458:31:175;;;;393:1925:152;;;;;;;;;;;5506:69:175;393:1925:152;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5506:69:175;:::i;:::-;393:1925:152;;5705:22:151;;;:56;;;;;393:1925:152;;;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;5705:56:151;5731:30;;;;;;393:1925:152;;;;5731:30:151;;393:1925:152;;;;;;;;5705:56:151;;;;;393:1925:152;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;5506:69:175;393:1925:152;;;;;5506:69:175;:::i;393:1925:152:-;-1:-1:-1;;;393:1925:152;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;2155:32;;;;;;;;;;;;;;;;;:::i;:::-;;;393:1925;;;;;2155:32;;;;393:1925;;;;2155:32;;;;;;393:1925;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;;;;;;;;;;;;;;1589:12;-1:-1:-1;;;;;393:1925:152;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7630:628:175;;;;7834:418;;;393:1925:152;;;7865:22:175;7861:286;;8160:17;;:::o;7861:286::-;1702:19;:23;393:1925:152;;8160:17:175;:::o;393:1925:152:-;;;-1:-1:-1;;;393:1925:152;;;;;;;;;;;;;;;;;;;;7834:418:175;393:1925:152;;;;-1:-1:-1;8937:21:175;:17;;9109:142;;;;;;;8933:379;393:1925:152;;;;;;9281:20:175;;393:1925:152;;9281:20:175;;;;393:1925:152;;;;;;;;;8957:1:175;393:1925:152;;;;;;;;;;;;8957:1:175;393:1925:152;;;;;;;;;;;;;;9281:20:175;;;;393:1925:152;;;;;;;;;;;;;;;;;;;-1:-1:-1;393:1925:152;",
    "linkReferences": {},
    "immutableReferences": {
      "23669": [
        {
          "start": 100,
          "length": 32
        },
        {
          "start": 301,
          "length": 32
        }
      ],
      "23671": [
        {
          "start": 381,
          "length": 32
        },
        {
          "start": 1047,
          "length": 32
        }
      ],
      "23673": [
        {
          "start": 174,
          "length": 32
        },
        {
          "start": 230,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "beneficiary()": "38af3eed",
    "release()": "86d1a69f",
    "releaseTime()": "b91d4001",
    "token()": "fc0c546a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \\\"advisors get all of their tokens after 1 year\\\".\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Returns the beneficiary that will receive the tokens.\"},\"constructor\":{\"details\":\"Deploys a timelock instance that is able to hold the token specified, and will only release it to `beneficiary_` when {release} is invoked after `releaseTime_`. The release time is specified as a Unix timestamp (in seconds).\"},\"release()\":{\"details\":\"Transfers tokens held by the timelock to the beneficiary. Will only succeed if invoked after the release time.\"},\"releaseTime()\":{\"details\":\"Returns the time when the tokens are released in seconds since Unix epoch (i.e. Unix timestamp).\"},\"token()\":{\"details\":\"Returns the token being held.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/openzeppelin/local/token/ERC20/utils/TokenTimelock.sol\":\"TokenTimelock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/openzeppelin/local/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x83a25eb2dc4303d6fb412f8a955a0970854c5bfde573249065806e2ebe26a944\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10cac0c3068d085bab77841ee334d61610b0d71c76752d22792505be9166fae9\",\"dweb:/ipfs/QmWG299WDCnP9iLjQYf91ki45DAktPS77G6gR6dr1janzc\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"contracts/.cache/openzeppelin/local/token/ERC20/utils/TokenTimelock.sol\":{\"keccak256\":\"0x7b4dce588e2fd9fb0de405fa375ee5ede4d411a0f063a8b4e3e260b590b42787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc917ffc360de51af65558603a17052ffba1764ae974228d0298255a65fde8e6\",\"dweb:/ipfs/QmSQ4bb1aqNyjQHoRPXFNkAmBz45pa8jtKktB8WUm7aTrz\"]},\"contracts/.cache/openzeppelin/local/utils/Address.sol\":{\"keccak256\":\"0x277775f22320f32702fd59efea3ce2758a29ab81cf2493fa7ed56514c57e7444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fca7b7cf5c2f491133149ea6b44519030daf917867406935b25e6f6b2fb61ac\",\"dweb:/ipfs/QmZZHqpknhqvtBST1JNefHXPe4U7EzefQdySDsemf41qrn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "beneficiary_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "releaseTime_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beneficiary",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "release"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "releaseTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "beneficiary()": {
            "details": "Returns the beneficiary that will receive the tokens."
          },
          "constructor": {
            "details": "Deploys a timelock instance that is able to hold the token specified, and will only release it to `beneficiary_` when {release} is invoked after `releaseTime_`. The release time is specified as a Unix timestamp (in seconds)."
          },
          "release()": {
            "details": "Transfers tokens held by the timelock to the beneficiary. Will only succeed if invoked after the release time."
          },
          "releaseTime()": {
            "details": "Returns the time when the tokens are released in seconds since Unix epoch (i.e. Unix timestamp)."
          },
          "token()": {
            "details": "Returns the token being held."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/openzeppelin/local/token/ERC20/utils/TokenTimelock.sol": "TokenTimelock"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/openzeppelin/local/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x83a25eb2dc4303d6fb412f8a955a0970854c5bfde573249065806e2ebe26a944",
        "urls": [
          "bzz-raw://10cac0c3068d085bab77841ee334d61610b0d71c76752d22792505be9166fae9",
          "dweb:/ipfs/QmWG299WDCnP9iLjQYf91ki45DAktPS77G6gR6dr1janzc"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/token/ERC20/utils/TokenTimelock.sol": {
        "keccak256": "0x7b4dce588e2fd9fb0de405fa375ee5ede4d411a0f063a8b4e3e260b590b42787",
        "urls": [
          "bzz-raw://fc917ffc360de51af65558603a17052ffba1764ae974228d0298255a65fde8e6",
          "dweb:/ipfs/QmSQ4bb1aqNyjQHoRPXFNkAmBz45pa8jtKktB8WUm7aTrz"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/utils/Address.sol": {
        "keccak256": "0x277775f22320f32702fd59efea3ce2758a29ab81cf2493fa7ed56514c57e7444",
        "urls": [
          "bzz-raw://4fca7b7cf5c2f491133149ea6b44519030daf917867406935b25e6f6b2fb61ac",
          "dweb:/ipfs/QmZZHqpknhqvtBST1JNefHXPe4U7EzefQdySDsemf41qrn"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/openzeppelin/local/token/ERC20/utils/TokenTimelock.sol",
    "id": 23775,
    "exportedSymbols": {
      "Address": [
        28167
      ],
      "IERC20": [
        20600
      ],
      "IERC20Permit": [
        23111
      ],
      "SafeERC20": [
        23658
      ],
      "TokenTimelock": [
        23774
      ]
    },
    "nodeType": "SourceUnit",
    "src": "119:2200:152",
    "nodes": [
      {
        "id": 23660,
        "nodeType": "PragmaDirective",
        "src": "119:23:152",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 23661,
        "nodeType": "ImportDirective",
        "src": "144:25:152",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23775,
        "sourceUnit": 23659,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23774,
        "nodeType": "ContractDefinition",
        "src": "393:1925:152",
        "nodes": [
          {
            "id": 23666,
            "nodeType": "UsingForDirective",
            "src": "422:27:152",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 23663,
              "name": "SafeERC20",
              "nameLocations": [
                "428:9:152"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23658,
              "src": "428:9:152"
            },
            "typeName": {
              "id": 23665,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23664,
                "name": "IERC20",
                "nameLocations": [
                  "442:6:152"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20600,
                "src": "442:6:152"
              },
              "referencedDeclaration": 20600,
              "src": "442:6:152",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$20600",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 23669,
            "nodeType": "VariableDeclaration",
            "src": "500:31:152",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "525:6:152",
            "scope": 23774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$20600",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 23668,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23667,
                "name": "IERC20",
                "nameLocations": [
                  "500:6:152"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20600,
                "src": "500:6:152"
              },
              "referencedDeclaration": 20600,
              "src": "500:6:152",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$20600",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "id": 23671,
            "nodeType": "VariableDeclaration",
            "src": "591:38:152",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "617:12:152",
            "scope": 23774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23670,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:152",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 23673,
            "nodeType": "VariableDeclaration",
            "src": "683:38:152",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "709:12:152",
            "scope": 23774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23672,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "683:7:152",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 23705,
            "nodeType": "FunctionDefinition",
            "src": "995:280:152",
            "nodes": [],
            "body": {
              "id": 23704,
              "nodeType": "Block",
              "src": "1066:209:152",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23685,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23681,
                          "src": "1084:12:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 23686,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1099:5:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1105:9:152",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1099:15:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1084:30:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 23689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:52:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 23684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1076:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:93:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23691,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:93:152"
                },
                {
                  "expression": {
                    "id": 23694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23692,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23669,
                      "src": "1179:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$20600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23693,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23677,
                      "src": "1188:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$20600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1179:15:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$20600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 23695,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:15:152"
                },
                {
                  "expression": {
                    "id": 23698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23696,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23671,
                      "src": "1204:12:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23697,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23679,
                      "src": "1219:12:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1204:27:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23699,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:27:152"
                },
                {
                  "expression": {
                    "id": 23702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23700,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23673,
                      "src": "1241:12:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23701,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23681,
                      "src": "1256:12:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1241:27:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23703,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:27:152"
                }
              ]
            },
            "documentation": {
              "id": 23674,
              "nodeType": "StructuredDocumentation",
              "src": "728:262:152",
              "text": " @dev Deploys a timelock instance that is able to hold the token specified, and will only release it to\n `beneficiary_` when {release} is invoked after `releaseTime_`. The release time is specified as a Unix timestamp\n (in seconds)."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23677,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1014:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 23705,
                  "src": "1007:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$20600",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 23676,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23675,
                      "name": "IERC20",
                      "nameLocations": [
                        "1007:6:152"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20600,
                      "src": "1007:6:152"
                    },
                    "referencedDeclaration": 20600,
                    "src": "1007:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$20600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23679,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "1030:12:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 23705,
                  "src": "1022:20:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23681,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "1052:12:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 23705,
                  "src": "1044:20:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:59:152"
            },
            "returnParameters": {
              "id": 23683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:0:152"
            },
            "scope": 23774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23715,
            "nodeType": "FunctionDefinition",
            "src": "1339:84:152",
            "nodes": [],
            "body": {
              "id": 23714,
              "nodeType": "Block",
              "src": "1393:30:152",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 23712,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23669,
                    "src": "1410:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$20600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 23711,
                  "id": 23713,
                  "nodeType": "Return",
                  "src": "1403:13:152"
                }
              ]
            },
            "documentation": {
              "id": 23706,
              "nodeType": "StructuredDocumentation",
              "src": "1281:53:152",
              "text": " @dev Returns the token being held."
            },
            "functionSelector": "fc0c546a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1348:5:152",
            "parameters": {
              "id": 23707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1353:2:152"
            },
            "returnParameters": {
              "id": 23711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23715,
                  "src": "1385:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$20600",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 23709,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23708,
                      "name": "IERC20",
                      "nameLocations": [
                        "1385:6:152"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20600,
                      "src": "1385:6:152"
                    },
                    "referencedDeclaration": 20600,
                    "src": "1385:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$20600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1384:8:152"
            },
            "scope": 23774,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23724,
            "nodeType": "FunctionDefinition",
            "src": "1511:97:152",
            "nodes": [],
            "body": {
              "id": 23723,
              "nodeType": "Block",
              "src": "1572:36:152",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 23721,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23671,
                    "src": "1589:12:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 23720,
                  "id": 23722,
                  "nodeType": "Return",
                  "src": "1582:19:152"
                }
              ]
            },
            "documentation": {
              "id": 23716,
              "nodeType": "StructuredDocumentation",
              "src": "1429:77:152",
              "text": " @dev Returns the beneficiary that will receive the tokens."
            },
            "functionSelector": "38af3eed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1520:11:152",
            "parameters": {
              "id": 23717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1531:2:152"
            },
            "returnParameters": {
              "id": 23720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23724,
                  "src": "1563:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1562:9:152"
            },
            "scope": 23774,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23733,
            "nodeType": "FunctionDefinition",
            "src": "1739:97:152",
            "nodes": [],
            "body": {
              "id": 23732,
              "nodeType": "Block",
              "src": "1800:36:152",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 23730,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23673,
                    "src": "1817:12:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23729,
                  "id": 23731,
                  "nodeType": "Return",
                  "src": "1810:19:152"
                }
              ]
            },
            "documentation": {
              "id": 23725,
              "nodeType": "StructuredDocumentation",
              "src": "1614:120:152",
              "text": " @dev Returns the time when the tokens are released in seconds since Unix epoch (i.e. Unix timestamp)."
            },
            "functionSelector": "b91d4001",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1748:11:152",
            "parameters": {
              "id": 23726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:2:152"
            },
            "returnParameters": {
              "id": 23729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23733,
                  "src": "1791:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:9:152"
            },
            "scope": 23774,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23773,
            "nodeType": "FunctionDefinition",
            "src": "1988:328:152",
            "nodes": [],
            "body": {
              "id": 23772,
              "nodeType": "Block",
              "src": "2022:294:152",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23738,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2040:5:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2046:9:152",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2040:15:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 23740,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23733,
                            "src": "2059:11:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 23741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2059:13:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2040:32:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 23743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2074:52:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 23737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2032:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2032:95:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23745,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:95:152"
                },
                {
                  "assignments": [
                    23747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23747,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2146:6:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 23772,
                      "src": "2138:14:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2138:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23756,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23753,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2181:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$23774",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$23774",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 23752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2173:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2173:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2173:13:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 23748,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23715,
                          "src": "2155:5:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$20600_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 23749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2155:7:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20600",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2163:9:152",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20557,
                      "src": "2155:17:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 23755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:32:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2138:49:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23758,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23747,
                          "src": "2205:6:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2214:1:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2205:10:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 23761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2217:37:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 23757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2197:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:58:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23763,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:58:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 23767,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23724,
                          "src": "2287:11:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 23768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2287:13:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23769,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23747,
                        "src": "2302:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 23764,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23715,
                          "src": "2266:5:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$20600_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 23765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2266:7:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20600",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2274:12:152",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23315,
                      "src": "2266:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$20600_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$20600_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:43:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:43:152"
                }
              ]
            },
            "documentation": {
              "id": 23734,
              "nodeType": "StructuredDocumentation",
              "src": "1842:141:152",
              "text": " @dev Transfers tokens held by the timelock to the beneficiary. Will only succeed if invoked after the release\n time."
            },
            "functionSelector": "86d1a69f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1997:7:152",
            "parameters": {
              "id": 23735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2004:2:152"
            },
            "returnParameters": {
              "id": 23736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2022:0:152"
            },
            "scope": 23774,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenTimelock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 23662,
          "nodeType": "StructuredDocumentation",
          "src": "171:221:152",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23774
        ],
        "name": "TokenTimelock",
        "nameLocation": "402:13:152",
        "scope": 23775,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 152
}