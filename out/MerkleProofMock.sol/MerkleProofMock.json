{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60808060405234610016576101c9908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c635a9a49c71461002557600080fd5b3461015e57606036600319011261015e576004359067ffffffffffffffff80831161015a573660238401121561015a578260040135908082116101465760059382851b92603f8401601f191687019283118784101761013257604092835286526020926024848801918301019136831161012e576024859101915b83831061011e57505050506044355b85518410156101135783851b8601830151600191908082116100f057835190858201928352848201528381526100e481610161565b519020935b01926100af565b908351908582019283528482015283815261010a81610161565b519020936100e9565b905190602435148152f35b82358152918101918591016100a0565b8580fd5b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b80fd5b6060810190811067ffffffffffffffff82111761017d57604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122088da9dbce953585df2d7b2a60042cf21d3fd0b940a97d57744bef3fc22d8bee064736f6c63430008130033",
    "sourceMap": "106:191:285:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080600436101561000f57600080fd5b6000803560e01c635a9a49c71461002557600080fd5b3461015e57606036600319011261015e576004359067ffffffffffffffff80831161015a573660238401121561015a578260040135908082116101465760059382851b92603f8401601f191687019283118784101761013257604092835286526020926024848801918301019136831161012e576024859101915b83831061011e57505050506044355b85518410156101135783851b8601830151600191908082116100f057835190858201928352848201528381526100e481610161565b519020935b01926100af565b908351908582019283528482015283815261010a81610161565b519020936100e9565b905190602435148152f35b82358152918101918591016100a0565b8580fd5b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b80fd5b6060810190811067ffffffffffffffff82111761017d57604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122088da9dbce953585df2d7b2a60042cf21d3fd0b940a97d57744bef3fc22d8bee064736f6c63430008130033",
    "sourceMap": "106:191:285:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;106:191:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;106:191:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:3:284;106:191:285;;783:16:284;;;;;106:191:285;;;;;;;;;;;878:28:284;;;;;106:191:285;;955:44:284;;;;106:191:285;;;;;;;955:44:284;;;;;;:::i;:::-;106:191:285;945:55:284;;874:262;;106:191:285;768:13:284;;;874:262;106:191:285;;;1072:44:284;;;;106:191:285;;;;;;;1072:44:284;;;;;;:::i;:::-;106:191:285;1062:55:284;;874:262;;;783:16;;106:191:285;;;;1171:20:284;106:191:285;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;106:191:285;;;;;;;;;-1:-1:-1;;;106:191:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "verify(bytes32[],bytes32,bytes32)": "5a9a49c7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/solidstate/local/cryptography/MerkleProofMock.sol\":\"MerkleProofMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/solidstate/local/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x7bf1dace0c4e62e8d52df7df6c9df61b15ffe8fde281ba1ea0c9ede7c626f1d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fecbbf3a73a798eff63936e7a6603fc010c678f4c62c27ff06476325b786de7\",\"dweb:/ipfs/QmVmiC65TTHeqxohLe65sNPfdobZf52Fh3dFnA3CJF19Et\"]},\"contracts/.cache/solidstate/local/cryptography/MerkleProofMock.sol\":{\"keccak256\":\"0xf88d41cd5f8e0147b75b093b0386ea9cb1d43aeb926d1c21cfa42f8df6c3b472\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869c9ec87b4366a6ca7716c3f879557e4249ea4876efc85c89789bfa58e5ebfa\",\"dweb:/ipfs/Qmb8Ho7irgPmTpAUCwEoCPtUB2D8G7uU4z8w8Mknyt1bPH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "leaf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/solidstate/local/cryptography/MerkleProofMock.sol": "MerkleProofMock"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/solidstate/local/cryptography/MerkleProof.sol": {
        "keccak256": "0x7bf1dace0c4e62e8d52df7df6c9df61b15ffe8fde281ba1ea0c9ede7c626f1d6",
        "urls": [
          "bzz-raw://1fecbbf3a73a798eff63936e7a6603fc010c678f4c62c27ff06476325b786de7",
          "dweb:/ipfs/QmVmiC65TTHeqxohLe65sNPfdobZf52Fh3dFnA3CJF19Et"
        ],
        "license": "MIT"
      },
      "contracts/.cache/solidstate/local/cryptography/MerkleProofMock.sol": {
        "keccak256": "0xf88d41cd5f8e0147b75b093b0386ea9cb1d43aeb926d1c21cfa42f8df6c3b472",
        "urls": [
          "bzz-raw://869c9ec87b4366a6ca7716c3f879557e4249ea4876efc85c89789bfa58e5ebfa",
          "dweb:/ipfs/Qmb8Ho7irgPmTpAUCwEoCPtUB2D8G7uU4z8w8Mknyt1bPH"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/solidstate/local/cryptography/MerkleProofMock.sol",
    "id": 42933,
    "exportedSymbols": {
      "MerkleProof": [
        42907
      ],
      "MerkleProofMock": [
        42932
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:265:285",
    "nodes": [
      {
        "id": 42909,
        "nodeType": "PragmaDirective",
        "src": "33:23:285",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 42911,
        "nodeType": "ImportDirective",
        "src": "58:46:285",
        "nodes": [],
        "absolutePath": "contracts/.cache/solidstate/local/cryptography/MerkleProof.sol",
        "file": "./MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42933,
        "sourceUnit": 42908,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42910,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42907,
              "src": "66:11:285",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42932,
        "nodeType": "ContractDefinition",
        "src": "106:191:285",
        "nodes": [
          {
            "id": 42931,
            "nodeType": "FunctionDefinition",
            "src": "137:158:285",
            "nodes": [],
            "body": {
              "id": 42930,
              "nodeType": "Block",
              "src": "234:61:285",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42925,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42914,
                        "src": "270:5:285",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 42926,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42916,
                        "src": "277:4:285",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 42927,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42918,
                        "src": "283:4:285",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 42923,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42907,
                        "src": "251:11:285",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$42907_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 42924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "263:6:285",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42906,
                      "src": "251:18:285",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 42928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:37:285",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 42922,
                  "id": 42929,
                  "nodeType": "Return",
                  "src": "244:44:285"
                }
              ]
            },
            "functionSelector": "5a9a49c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "146:6:285",
            "parameters": {
              "id": 42919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42914,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "170:5:285",
                  "nodeType": "VariableDeclaration",
                  "scope": 42931,
                  "src": "153:22:285",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42912,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "153:7:285",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 42913,
                    "nodeType": "ArrayTypeName",
                    "src": "153:9:285",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42916,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "185:4:285",
                  "nodeType": "VariableDeclaration",
                  "scope": 42931,
                  "src": "177:12:285",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42915,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:285",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42918,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "199:4:285",
                  "nodeType": "VariableDeclaration",
                  "scope": 42931,
                  "src": "191:12:285",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42917,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "191:7:285",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "152:52:285"
            },
            "returnParameters": {
              "id": 42922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42931,
                  "src": "228:4:285",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:4:285",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "227:6:285"
            },
            "scope": 42932,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleProofMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42932
        ],
        "name": "MerkleProofMock",
        "nameLocation": "115:15:285",
        "scope": 42933,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 285
}