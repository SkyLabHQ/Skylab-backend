{
  "abi": [],
  "bytecode": {
    "object": "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b1ad6b2016a7e78663d5c14390fa51838db8a0acb7af1f8cae6ee871a0f8465164736f6c63430008130033",
    "sourceMap": "571:1004:14:-:0;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x600080fdfea2646970667358221220b1ad6b2016a7e78663d5c14390fa51838db8a0acb7af1f8cae6ee871a0f8465164736f6c63430008130033",
    "sourceMap": "571:1004:14:-:0;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Primitives for cross-chain aware contracts for https://arbitrum.io/[Arbitrum]. This version should only be used on L1 to process cross-chain messages originating from L2. For the other side, use {LibArbitrumL2}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.cache/openzeppelin/local/crosschain/arbitrum/LibArbitrumL1.sol\":\"LibArbitrumL1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solidstate/=lib/solidstate-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/.cache/openzeppelin/local/crosschain/arbitrum/LibArbitrumL1.sol\":{\"keccak256\":\"0x364ef776375bac74a5f4f2fd1dc1d4a089915ea0fe720249bb71431e7b2f787f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617a7d7e5be668c840817309f3304f1856d35c56090b8772eeba2bd3f77b279c\",\"dweb:/ipfs/Qmei4Am5cKUx1qyTpFvJ5vo3hFuvtzq5gaz48KUNkETyD6\"]},\"contracts/.cache/openzeppelin/local/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"contracts/.cache/openzeppelin/local/vendor/arbitrum/IBridge.sol\":{\"keccak256\":\"0x936d83f995e76b8ca1ce877a7d3bb686ea360da6f37cc5fc68981a5c869b45a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://16ae4ecc5848b64b295c3cf658732c6c59a260e999ef254159bc51c23ac6d6b5\",\"dweb:/ipfs/QmR9WAA9nTmvaKyuib29pydY53wmzFVnD7hz1kEuoPuTo9\"]},\"contracts/.cache/openzeppelin/local/vendor/arbitrum/IOutbox.sol\":{\"keccak256\":\"0x54d147ba6f6e9017bda044b487796d343d4c5c0a0a38ef72d7c7751a389ec5ee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://233f4cddee232e5c421d7143cd6e2f934caa30281c1579882e58ad78882bd016\",\"dweb:/ipfs/QmYoZrPfaA5cew51jahc3mYNoUYvmVum3M75gW8dzCpqiH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@solidstate/=lib/solidstate-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/.cache/openzeppelin/local/crosschain/arbitrum/LibArbitrumL1.sol": "LibArbitrumL1"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/.cache/openzeppelin/local/crosschain/arbitrum/LibArbitrumL1.sol": {
        "keccak256": "0x364ef776375bac74a5f4f2fd1dc1d4a089915ea0fe720249bb71431e7b2f787f",
        "urls": [
          "bzz-raw://617a7d7e5be668c840817309f3304f1856d35c56090b8772eeba2bd3f77b279c",
          "dweb:/ipfs/Qmei4Am5cKUx1qyTpFvJ5vo3hFuvtzq5gaz48KUNkETyD6"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/crosschain/errors.sol": {
        "keccak256": "0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3",
        "urls": [
          "bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a",
          "dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ"
        ],
        "license": "MIT"
      },
      "contracts/.cache/openzeppelin/local/vendor/arbitrum/IBridge.sol": {
        "keccak256": "0x936d83f995e76b8ca1ce877a7d3bb686ea360da6f37cc5fc68981a5c869b45a5",
        "urls": [
          "bzz-raw://16ae4ecc5848b64b295c3cf658732c6c59a260e999ef254159bc51c23ac6d6b5",
          "dweb:/ipfs/QmR9WAA9nTmvaKyuib29pydY53wmzFVnD7hz1kEuoPuTo9"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/.cache/openzeppelin/local/vendor/arbitrum/IOutbox.sol": {
        "keccak256": "0x54d147ba6f6e9017bda044b487796d343d4c5c0a0a38ef72d7c7751a389ec5ee",
        "urls": [
          "bzz-raw://233f4cddee232e5c421d7143cd6e2f934caa30281c1579882e58ad78882bd016",
          "dweb:/ipfs/QmYoZrPfaA5cew51jahc3mYNoUYvmVum3M75gW8dzCpqiH"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/.cache/openzeppelin/local/crosschain/arbitrum/LibArbitrumL1.sol",
    "id": 1859,
    "exportedSymbols": {
      "ArbitrumL1_Bridge": [
        40947
      ],
      "ArbitrumL1_Outbox": [
        41308
      ],
      "InvalidCrossChainSender": [
        1916
      ],
      "LibArbitrumL1": [
        1858
      ],
      "NotCrossChainCall": [
        1910
      ]
    },
    "nodeType": "SourceUnit",
    "src": "121:1455:14",
    "nodes": [
      {
        "id": 1796,
        "nodeType": "PragmaDirective",
        "src": "121:23:14",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 1798,
        "nodeType": "ImportDirective",
        "src": "146:79:14",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/vendor/arbitrum/IBridge.sol",
        "file": "../../vendor/arbitrum/IBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1859,
        "sourceUnit": 40948,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1797,
              "name": "IBridge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40947,
              "src": "154:7:14",
              "typeDescriptions": {}
            },
            "local": "ArbitrumL1_Bridge",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1800,
        "nodeType": "ImportDirective",
        "src": "226:79:14",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/vendor/arbitrum/IOutbox.sol",
        "file": "../../vendor/arbitrum/IOutbox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1859,
        "sourceUnit": 41309,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1799,
              "name": "IOutbox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41308,
              "src": "234:7:14",
              "typeDescriptions": {}
            },
            "local": "ArbitrumL1_Outbox",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1801,
        "nodeType": "ImportDirective",
        "src": "306:23:14",
        "nodes": [],
        "absolutePath": "contracts/.cache/openzeppelin/local/crosschain/errors.sol",
        "file": "../errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1859,
        "sourceUnit": 1917,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1858,
        "nodeType": "ContractDefinition",
        "src": "571:1004:14",
        "nodes": [
          {
            "id": 1816,
            "nodeType": "FunctionDefinition",
            "src": "740:111:14",
            "nodes": [],
            "body": {
              "id": 1815,
              "nodeType": "Block",
              "src": "807:44:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1810,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "824:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "828:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "824:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1812,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1805,
                      "src": "838:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "824:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1809,
                  "id": 1814,
                  "nodeType": "Return",
                  "src": "817:27:14"
                }
              ]
            },
            "documentation": {
              "id": 1803,
              "nodeType": "StructuredDocumentation",
              "src": "599:136:14",
              "text": " @dev Returns whether the current function call is the result of a\n cross-chain message relayed by the `bridge`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCrossChain",
            "nameLocation": "749:12:14",
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1805,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "770:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1816,
                  "src": "762:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:16:14"
            },
            "returnParameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1816,
                  "src": "801:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:6:14"
            },
            "scope": 1858,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1857,
            "nodeType": "FunctionDefinition",
            "src": "1215:358:14",
            "nodes": [],
            "body": {
              "id": 1856,
              "nodeType": "Block",
              "src": "1289:284:14",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1303:21:14",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1825,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1819,
                          "src": "1317:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1824,
                        "name": "isCrossChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "1304:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1304:20:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1831,
                  "nodeType": "IfStatement",
                  "src": "1299:53:14",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1828,
                        "name": "NotCrossChainCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "1333:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1333:19:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1830,
                    "nodeType": "RevertStatement",
                    "src": "1326:26:14"
                  }
                },
                {
                  "assignments": [
                    1833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1833,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1371:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1856,
                      "src": "1363:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1832,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1843,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1836,
                                    "name": "bridge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1819,
                                    "src": "1416:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1835,
                                  "name": "ArbitrumL1_Bridge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40947,
                                  "src": "1398:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IBridge_$40947_$",
                                    "typeString": "type(contract IBridge)"
                                  }
                                },
                                "id": 1837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1398:25:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBridge_$40947",
                                  "typeString": "contract IBridge"
                                }
                              },
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1424:12:14",
                              "memberName": "activeOutbox",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40839,
                              "src": "1398:38:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1398:40:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1834,
                          "name": "ArbitrumL1_Outbox",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41308,
                          "src": "1380:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOutbox_$41308_$",
                            "typeString": "type(contract IOutbox)"
                          }
                        },
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1380:59:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOutbox_$41308",
                          "typeString": "contract IOutbox"
                        }
                      },
                      "id": 1841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1440:12:14",
                      "memberName": "l2ToL1Sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41201,
                      "src": "1380:72:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:74:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1363:91:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1845,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1833,
                          "src": "1472:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1490:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1482:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1846,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1482:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1472:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6962417262697472756d4c313a2073797374656d206d6573736167657320776974686f75742073656e646572",
                        "id": 1851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:47:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d658411d0561b99f9fb199be39e8001e28574097edaed4471e2c7d7066c63b9a",
                          "typeString": "literal_string \"LibArbitrumL1: system messages without sender\""
                        },
                        "value": "LibArbitrumL1: system messages without sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d658411d0561b99f9fb199be39e8001e28574097edaed4471e2c7d7066c63b9a",
                          "typeString": "literal_string \"LibArbitrumL1: system messages without sender\""
                        }
                      ],
                      "id": 1844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1464:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:78:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1853,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:78:14"
                },
                {
                  "expression": {
                    "id": 1854,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1833,
                    "src": "1560:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1823,
                  "id": 1855,
                  "nodeType": "Return",
                  "src": "1553:13:14"
                }
              ]
            },
            "documentation": {
              "id": 1817,
              "nodeType": "StructuredDocumentation",
              "src": "857:353:14",
              "text": " @dev Returns the address of the sender that triggered the current\n cross-chain message through the `bridge`.\n NOTE: {isCrossChain} should be checked before trying to recover the\n sender, as it will revert with `NotCrossChainCall` if the current\n function call is not the result of a cross-chain message."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "crossChainSender",
            "nameLocation": "1224:16:14",
            "parameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1819,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1249:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "1241:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:16:14"
            },
            "returnParameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "1280:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:9:14"
            },
            "scope": 1858,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LibArbitrumL1",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1802,
          "nodeType": "StructuredDocumentation",
          "src": "331:239:14",
          "text": " @dev Primitives for cross-chain aware contracts for\n https://arbitrum.io/[Arbitrum].\n This version should only be used on L1 to process cross-chain messages\n originating from L2. For the other side, use {LibArbitrumL2}."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1858
        ],
        "name": "LibArbitrumL1",
        "nameLocation": "579:13:14",
        "scope": 1859,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 14
}